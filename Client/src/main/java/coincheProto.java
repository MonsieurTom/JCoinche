// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CoincheGameCmd.proto

public final class coincheProto {
  private coincheProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code TRUMP}
   */
  public enum TRUMP
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TNONE = 0;</code>
     */
    TNONE(0),
    /**
     * <code>TSPADE = 1;</code>
     */
    TSPADE(1),
    /**
     * <code>THEARTH = 2;</code>
     */
    THEARTH(2),
    /**
     * <code>TDIAMOND = 3;</code>
     */
    TDIAMOND(3),
    /**
     * <code>TCLUB = 4;</code>
     */
    TCLUB(4),
    /**
     * <code>TALL = 5;</code>
     */
    TALL(5),
    ;

    /**
     * <code>TNONE = 0;</code>
     */
    public static final int TNONE_VALUE = 0;
    /**
     * <code>TSPADE = 1;</code>
     */
    public static final int TSPADE_VALUE = 1;
    /**
     * <code>THEARTH = 2;</code>
     */
    public static final int THEARTH_VALUE = 2;
    /**
     * <code>TDIAMOND = 3;</code>
     */
    public static final int TDIAMOND_VALUE = 3;
    /**
     * <code>TCLUB = 4;</code>
     */
    public static final int TCLUB_VALUE = 4;
    /**
     * <code>TALL = 5;</code>
     */
    public static final int TALL_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TRUMP valueOf(int value) {
      return forNumber(value);
    }

    public static TRUMP forNumber(int value) {
      switch (value) {
        case 0: return TNONE;
        case 1: return TSPADE;
        case 2: return THEARTH;
        case 3: return TDIAMOND;
        case 4: return TCLUB;
        case 5: return TALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TRUMP>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TRUMP> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TRUMP>() {
            public TRUMP findValueByNumber(int number) {
              return TRUMP.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return coincheProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final TRUMP[] VALUES = values();

    public static TRUMP valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TRUMP(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TRUMP)
  }

  /**
   * Protobuf enum {@code CARD_COLOR}
   */
  public enum CARD_COLOR
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SPADE = 0;</code>
     */
    SPADE(0),
    /**
     * <code>HEARTH = 1;</code>
     */
    HEARTH(1),
    /**
     * <code>DIAMOND = 2;</code>
     */
    DIAMOND(2),
    /**
     * <code>CLUB = 3;</code>
     */
    CLUB(3),
    ;

    /**
     * <code>SPADE = 0;</code>
     */
    public static final int SPADE_VALUE = 0;
    /**
     * <code>HEARTH = 1;</code>
     */
    public static final int HEARTH_VALUE = 1;
    /**
     * <code>DIAMOND = 2;</code>
     */
    public static final int DIAMOND_VALUE = 2;
    /**
     * <code>CLUB = 3;</code>
     */
    public static final int CLUB_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CARD_COLOR valueOf(int value) {
      return forNumber(value);
    }

    public static CARD_COLOR forNumber(int value) {
      switch (value) {
        case 0: return SPADE;
        case 1: return HEARTH;
        case 2: return DIAMOND;
        case 3: return CLUB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CARD_COLOR>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CARD_COLOR> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CARD_COLOR>() {
            public CARD_COLOR findValueByNumber(int number) {
              return CARD_COLOR.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return coincheProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final CARD_COLOR[] VALUES = values();

    public static CARD_COLOR valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CARD_COLOR(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CARD_COLOR)
  }

  /**
   * Protobuf enum {@code CARD_NAME}
   */
  public enum CARD_NAME
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACE = 0;</code>
     */
    ACE(0),
    /**
     * <code>SEVEN = 1;</code>
     */
    SEVEN(1),
    /**
     * <code>HEIGHT = 2;</code>
     */
    HEIGHT(2),
    /**
     * <code>NINE = 3;</code>
     */
    NINE(3),
    /**
     * <code>TEN = 4;</code>
     */
    TEN(4),
    /**
     * <code>JACK = 5;</code>
     */
    JACK(5),
    /**
     * <code>QUEEN = 6;</code>
     */
    QUEEN(6),
    /**
     * <code>KING = 7;</code>
     */
    KING(7),
    ;

    /**
     * <code>ACE = 0;</code>
     */
    public static final int ACE_VALUE = 0;
    /**
     * <code>SEVEN = 1;</code>
     */
    public static final int SEVEN_VALUE = 1;
    /**
     * <code>HEIGHT = 2;</code>
     */
    public static final int HEIGHT_VALUE = 2;
    /**
     * <code>NINE = 3;</code>
     */
    public static final int NINE_VALUE = 3;
    /**
     * <code>TEN = 4;</code>
     */
    public static final int TEN_VALUE = 4;
    /**
     * <code>JACK = 5;</code>
     */
    public static final int JACK_VALUE = 5;
    /**
     * <code>QUEEN = 6;</code>
     */
    public static final int QUEEN_VALUE = 6;
    /**
     * <code>KING = 7;</code>
     */
    public static final int KING_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CARD_NAME valueOf(int value) {
      return forNumber(value);
    }

    public static CARD_NAME forNumber(int value) {
      switch (value) {
        case 0: return ACE;
        case 1: return SEVEN;
        case 2: return HEIGHT;
        case 3: return NINE;
        case 4: return TEN;
        case 5: return JACK;
        case 6: return QUEEN;
        case 7: return KING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CARD_NAME>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CARD_NAME> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CARD_NAME>() {
            public CARD_NAME findValueByNumber(int number) {
              return CARD_NAME.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return coincheProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final CARD_NAME[] VALUES = values();

    public static CARD_NAME valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CARD_NAME(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CARD_NAME)
  }

  public interface PlayCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    coincheProto.CARD_NAME getName();

    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    coincheProto.CARD_COLOR getColor();
  }
  /**
   * <pre>
   * Player CMD
   * </pre>
   *
   * Protobuf type {@code PlayCard}
   */
  public  static final class PlayCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlayCard)
      PlayCardOrBuilder {
    // Use PlayCard.newBuilder() to construct.
    private PlayCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayCard() {
      name_ = 0;
      color_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.CARD_NAME value = coincheProto.CARD_NAME.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                name_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              coincheProto.CARD_COLOR value = coincheProto.CARD_COLOR.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                color_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_PlayCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_PlayCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.PlayCard.class, coincheProto.PlayCard.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public coincheProto.CARD_NAME getName() {
      coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
      return result == null ? coincheProto.CARD_NAME.ACE : result;
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public coincheProto.CARD_COLOR getColor() {
      coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
      return result == null ? coincheProto.CARD_COLOR.SPADE : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, color_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, color_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.PlayCard)) {
        return super.equals(obj);
      }
      coincheProto.PlayCard other = (coincheProto.PlayCard) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && name_ == other.name_;
      }
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && color_ == other.color_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + name_;
      }
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + color_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.PlayCard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayCard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.PlayCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.PlayCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Player CMD
     * </pre>
     *
     * Protobuf type {@code PlayCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayCard)
        coincheProto.PlayCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_PlayCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_PlayCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.PlayCard.class, coincheProto.PlayCard.Builder.class);
      }

      // Construct using coincheProto.PlayCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_PlayCard_descriptor;
      }

      public coincheProto.PlayCard getDefaultInstanceForType() {
        return coincheProto.PlayCard.getDefaultInstance();
      }

      public coincheProto.PlayCard build() {
        coincheProto.PlayCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.PlayCard buildPartial() {
        coincheProto.PlayCard result = new coincheProto.PlayCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.PlayCard) {
          return mergeFrom((coincheProto.PlayCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.PlayCard other) {
        if (other == coincheProto.PlayCard.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasColor()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.PlayCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.PlayCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int name_ = 0;
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public coincheProto.CARD_NAME getName() {
        coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
        return result == null ? coincheProto.CARD_NAME.ACE : result;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder setName(coincheProto.CARD_NAME value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      private int color_ = 0;
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public coincheProto.CARD_COLOR getColor() {
        coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
        return result == null ? coincheProto.CARD_COLOR.SPADE : result;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder setColor(coincheProto.CARD_COLOR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        color_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlayCard)
    }

    // @@protoc_insertion_point(class_scope:PlayCard)
    private static final coincheProto.PlayCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.PlayCard();
    }

    public static coincheProto.PlayCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayCard>
        PARSER = new com.google.protobuf.AbstractParser<PlayCard>() {
      public PlayCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayCard> getParserForType() {
      return PARSER;
    }

    public coincheProto.PlayCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Deal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 deal = 1;</code>
     */
    boolean hasDeal();
    /**
     * <code>required int32 deal = 1;</code>
     */
    int getDeal();

    /**
     * <code>required .TRUMP trump = 2;</code>
     */
    boolean hasTrump();
    /**
     * <code>required .TRUMP trump = 2;</code>
     */
    coincheProto.TRUMP getTrump();
  }
  /**
   * Protobuf type {@code Deal}
   */
  public  static final class Deal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Deal)
      DealOrBuilder {
    // Use Deal.newBuilder() to construct.
    private Deal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Deal() {
      deal_ = 0;
      trump_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Deal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deal_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              coincheProto.TRUMP value = coincheProto.TRUMP.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                trump_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_Deal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_Deal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.Deal.class, coincheProto.Deal.Builder.class);
    }

    private int bitField0_;
    public static final int DEAL_FIELD_NUMBER = 1;
    private int deal_;
    /**
     * <code>required int32 deal = 1;</code>
     */
    public boolean hasDeal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 deal = 1;</code>
     */
    public int getDeal() {
      return deal_;
    }

    public static final int TRUMP_FIELD_NUMBER = 2;
    private int trump_;
    /**
     * <code>required .TRUMP trump = 2;</code>
     */
    public boolean hasTrump() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .TRUMP trump = 2;</code>
     */
    public coincheProto.TRUMP getTrump() {
      coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
      return result == null ? coincheProto.TRUMP.TNONE : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrump()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, deal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, trump_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, trump_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.Deal)) {
        return super.equals(obj);
      }
      coincheProto.Deal other = (coincheProto.Deal) obj;

      boolean result = true;
      result = result && (hasDeal() == other.hasDeal());
      if (hasDeal()) {
        result = result && (getDeal()
            == other.getDeal());
      }
      result = result && (hasTrump() == other.hasTrump());
      if (hasTrump()) {
        result = result && trump_ == other.trump_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDeal()) {
        hash = (37 * hash) + DEAL_FIELD_NUMBER;
        hash = (53 * hash) + getDeal();
      }
      if (hasTrump()) {
        hash = (37 * hash) + TRUMP_FIELD_NUMBER;
        hash = (53 * hash) + trump_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.Deal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.Deal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.Deal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.Deal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.Deal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.Deal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.Deal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.Deal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.Deal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.Deal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.Deal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.Deal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.Deal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Deal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Deal)
        coincheProto.DealOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_Deal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_Deal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.Deal.class, coincheProto.Deal.Builder.class);
      }

      // Construct using coincheProto.Deal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        trump_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_Deal_descriptor;
      }

      public coincheProto.Deal getDefaultInstanceForType() {
        return coincheProto.Deal.getDefaultInstance();
      }

      public coincheProto.Deal build() {
        coincheProto.Deal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.Deal buildPartial() {
        coincheProto.Deal result = new coincheProto.Deal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deal_ = deal_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.trump_ = trump_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.Deal) {
          return mergeFrom((coincheProto.Deal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.Deal other) {
        if (other == coincheProto.Deal.getDefaultInstance()) return this;
        if (other.hasDeal()) {
          setDeal(other.getDeal());
        }
        if (other.hasTrump()) {
          setTrump(other.getTrump());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeal()) {
          return false;
        }
        if (!hasTrump()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.Deal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.Deal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int deal_ ;
      /**
       * <code>required int32 deal = 1;</code>
       */
      public boolean hasDeal() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 deal = 1;</code>
       */
      public int getDeal() {
        return deal_;
      }
      /**
       * <code>required int32 deal = 1;</code>
       */
      public Builder setDeal(int value) {
        bitField0_ |= 0x00000001;
        deal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 deal = 1;</code>
       */
      public Builder clearDeal() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deal_ = 0;
        onChanged();
        return this;
      }

      private int trump_ = 0;
      /**
       * <code>required .TRUMP trump = 2;</code>
       */
      public boolean hasTrump() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .TRUMP trump = 2;</code>
       */
      public coincheProto.TRUMP getTrump() {
        coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
        return result == null ? coincheProto.TRUMP.TNONE : result;
      }
      /**
       * <code>required .TRUMP trump = 2;</code>
       */
      public Builder setTrump(coincheProto.TRUMP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        trump_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TRUMP trump = 2;</code>
       */
      public Builder clearTrump() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trump_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Deal)
    }

    // @@protoc_insertion_point(class_scope:Deal)
    private static final coincheProto.Deal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.Deal();
    }

    public static coincheProto.Deal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Deal>
        PARSER = new com.google.protobuf.AbstractParser<Deal>() {
      public Deal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Deal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Deal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Deal> getParserForType() {
      return PARSER;
    }

    public coincheProto.Deal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
     */
    boolean hasTypeMessage();
    /**
     * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
     */
    coincheProto.PlayerMsg.TypeMessage getTypeMessage();

    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    boolean hasPlayCard();
    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    coincheProto.PlayCard getPlayCard();
    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    coincheProto.PlayCardOrBuilder getPlayCardOrBuilder();

    /**
     * <code>optional .Deal deal = 3;</code>
     */
    boolean hasDeal();
    /**
     * <code>optional .Deal deal = 3;</code>
     */
    coincheProto.Deal getDeal();
    /**
     * <code>optional .Deal deal = 3;</code>
     */
    coincheProto.DealOrBuilder getDealOrBuilder();
  }
  /**
   * <pre>
   * Msg encapsulation
   * </pre>
   *
   * Protobuf type {@code PlayerMsg}
   */
  public  static final class PlayerMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlayerMsg)
      PlayerMsgOrBuilder {
    // Use PlayerMsg.newBuilder() to construct.
    private PlayerMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerMsg() {
      typeMessage_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.PlayerMsg.TypeMessage value = coincheProto.PlayerMsg.TypeMessage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                typeMessage_ = rawValue;
              }
              break;
            }
            case 18: {
              coincheProto.PlayCard.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = playCard_.toBuilder();
              }
              playCard_ = input.readMessage(coincheProto.PlayCard.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playCard_);
                playCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              coincheProto.Deal.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = deal_.toBuilder();
              }
              deal_ = input.readMessage(coincheProto.Deal.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deal_);
                deal_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_PlayerMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_PlayerMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.PlayerMsg.class, coincheProto.PlayerMsg.Builder.class);
    }

    /**
     * Protobuf enum {@code PlayerMsg.TypeMessage}
     */
    public enum TypeMessage
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PLAYCARD = 0;</code>
       */
      PLAYCARD(0),
      /**
       * <code>DEAL = 1;</code>
       */
      DEAL(1),
      ;

      /**
       * <code>PLAYCARD = 0;</code>
       */
      public static final int PLAYCARD_VALUE = 0;
      /**
       * <code>DEAL = 1;</code>
       */
      public static final int DEAL_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeMessage valueOf(int value) {
        return forNumber(value);
      }

      public static TypeMessage forNumber(int value) {
        switch (value) {
          case 0: return PLAYCARD;
          case 1: return DEAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TypeMessage>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TypeMessage> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TypeMessage>() {
              public TypeMessage findValueByNumber(int number) {
                return TypeMessage.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return coincheProto.PlayerMsg.getDescriptor().getEnumTypes().get(0);
      }

      private static final TypeMessage[] VALUES = values();

      public static TypeMessage valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TypeMessage(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PlayerMsg.TypeMessage)
    }

    private int bitField0_;
    public static final int TYPEMESSAGE_FIELD_NUMBER = 1;
    private int typeMessage_;
    /**
     * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
     */
    public boolean hasTypeMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
     */
    public coincheProto.PlayerMsg.TypeMessage getTypeMessage() {
      coincheProto.PlayerMsg.TypeMessage result = coincheProto.PlayerMsg.TypeMessage.valueOf(typeMessage_);
      return result == null ? coincheProto.PlayerMsg.TypeMessage.PLAYCARD : result;
    }

    public static final int PLAYCARD_FIELD_NUMBER = 2;
    private coincheProto.PlayCard playCard_;
    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    public boolean hasPlayCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    public coincheProto.PlayCard getPlayCard() {
      return playCard_ == null ? coincheProto.PlayCard.getDefaultInstance() : playCard_;
    }
    /**
     * <code>optional .PlayCard playCard = 2;</code>
     */
    public coincheProto.PlayCardOrBuilder getPlayCardOrBuilder() {
      return playCard_ == null ? coincheProto.PlayCard.getDefaultInstance() : playCard_;
    }

    public static final int DEAL_FIELD_NUMBER = 3;
    private coincheProto.Deal deal_;
    /**
     * <code>optional .Deal deal = 3;</code>
     */
    public boolean hasDeal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Deal deal = 3;</code>
     */
    public coincheProto.Deal getDeal() {
      return deal_ == null ? coincheProto.Deal.getDefaultInstance() : deal_;
    }
    /**
     * <code>optional .Deal deal = 3;</code>
     */
    public coincheProto.DealOrBuilder getDealOrBuilder() {
      return deal_ == null ? coincheProto.Deal.getDefaultInstance() : deal_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTypeMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPlayCard()) {
        if (!getPlayCard().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDeal()) {
        if (!getDeal().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, typeMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getPlayCard());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getDeal());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, typeMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayCard());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDeal());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.PlayerMsg)) {
        return super.equals(obj);
      }
      coincheProto.PlayerMsg other = (coincheProto.PlayerMsg) obj;

      boolean result = true;
      result = result && (hasTypeMessage() == other.hasTypeMessage());
      if (hasTypeMessage()) {
        result = result && typeMessage_ == other.typeMessage_;
      }
      result = result && (hasPlayCard() == other.hasPlayCard());
      if (hasPlayCard()) {
        result = result && getPlayCard()
            .equals(other.getPlayCard());
      }
      result = result && (hasDeal() == other.hasDeal());
      if (hasDeal()) {
        result = result && getDeal()
            .equals(other.getDeal());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeMessage()) {
        hash = (37 * hash) + TYPEMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + typeMessage_;
      }
      if (hasPlayCard()) {
        hash = (37 * hash) + PLAYCARD_FIELD_NUMBER;
        hash = (53 * hash) + getPlayCard().hashCode();
      }
      if (hasDeal()) {
        hash = (37 * hash) + DEAL_FIELD_NUMBER;
        hash = (53 * hash) + getDeal().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.PlayerMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.PlayerMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Msg encapsulation
     * </pre>
     *
     * Protobuf type {@code PlayerMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerMsg)
        coincheProto.PlayerMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_PlayerMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_PlayerMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.PlayerMsg.class, coincheProto.PlayerMsg.Builder.class);
      }

      // Construct using coincheProto.PlayerMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayCardFieldBuilder();
          getDealFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        typeMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playCardBuilder_ == null) {
          playCard_ = null;
        } else {
          playCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dealBuilder_ == null) {
          deal_ = null;
        } else {
          dealBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_PlayerMsg_descriptor;
      }

      public coincheProto.PlayerMsg getDefaultInstanceForType() {
        return coincheProto.PlayerMsg.getDefaultInstance();
      }

      public coincheProto.PlayerMsg build() {
        coincheProto.PlayerMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.PlayerMsg buildPartial() {
        coincheProto.PlayerMsg result = new coincheProto.PlayerMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeMessage_ = typeMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (playCardBuilder_ == null) {
          result.playCard_ = playCard_;
        } else {
          result.playCard_ = playCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dealBuilder_ == null) {
          result.deal_ = deal_;
        } else {
          result.deal_ = dealBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.PlayerMsg) {
          return mergeFrom((coincheProto.PlayerMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.PlayerMsg other) {
        if (other == coincheProto.PlayerMsg.getDefaultInstance()) return this;
        if (other.hasTypeMessage()) {
          setTypeMessage(other.getTypeMessage());
        }
        if (other.hasPlayCard()) {
          mergePlayCard(other.getPlayCard());
        }
        if (other.hasDeal()) {
          mergeDeal(other.getDeal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTypeMessage()) {
          return false;
        }
        if (hasPlayCard()) {
          if (!getPlayCard().isInitialized()) {
            return false;
          }
        }
        if (hasDeal()) {
          if (!getDeal().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.PlayerMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.PlayerMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int typeMessage_ = 0;
      /**
       * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
       */
      public boolean hasTypeMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
       */
      public coincheProto.PlayerMsg.TypeMessage getTypeMessage() {
        coincheProto.PlayerMsg.TypeMessage result = coincheProto.PlayerMsg.TypeMessage.valueOf(typeMessage_);
        return result == null ? coincheProto.PlayerMsg.TypeMessage.PLAYCARD : result;
      }
      /**
       * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
       */
      public Builder setTypeMessage(coincheProto.PlayerMsg.TypeMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        typeMessage_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .PlayerMsg.TypeMessage typeMessage = 1;</code>
       */
      public Builder clearTypeMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeMessage_ = 0;
        onChanged();
        return this;
      }

      private coincheProto.PlayCard playCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayCard, coincheProto.PlayCard.Builder, coincheProto.PlayCardOrBuilder> playCardBuilder_;
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public boolean hasPlayCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public coincheProto.PlayCard getPlayCard() {
        if (playCardBuilder_ == null) {
          return playCard_ == null ? coincheProto.PlayCard.getDefaultInstance() : playCard_;
        } else {
          return playCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public Builder setPlayCard(coincheProto.PlayCard value) {
        if (playCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playCard_ = value;
          onChanged();
        } else {
          playCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public Builder setPlayCard(
          coincheProto.PlayCard.Builder builderForValue) {
        if (playCardBuilder_ == null) {
          playCard_ = builderForValue.build();
          onChanged();
        } else {
          playCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public Builder mergePlayCard(coincheProto.PlayCard value) {
        if (playCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              playCard_ != null &&
              playCard_ != coincheProto.PlayCard.getDefaultInstance()) {
            playCard_ =
              coincheProto.PlayCard.newBuilder(playCard_).mergeFrom(value).buildPartial();
          } else {
            playCard_ = value;
          }
          onChanged();
        } else {
          playCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public Builder clearPlayCard() {
        if (playCardBuilder_ == null) {
          playCard_ = null;
          onChanged();
        } else {
          playCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public coincheProto.PlayCard.Builder getPlayCardBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPlayCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      public coincheProto.PlayCardOrBuilder getPlayCardOrBuilder() {
        if (playCardBuilder_ != null) {
          return playCardBuilder_.getMessageOrBuilder();
        } else {
          return playCard_ == null ?
              coincheProto.PlayCard.getDefaultInstance() : playCard_;
        }
      }
      /**
       * <code>optional .PlayCard playCard = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayCard, coincheProto.PlayCard.Builder, coincheProto.PlayCardOrBuilder> 
          getPlayCardFieldBuilder() {
        if (playCardBuilder_ == null) {
          playCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.PlayCard, coincheProto.PlayCard.Builder, coincheProto.PlayCardOrBuilder>(
                  getPlayCard(),
                  getParentForChildren(),
                  isClean());
          playCard_ = null;
        }
        return playCardBuilder_;
      }

      private coincheProto.Deal deal_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.Deal, coincheProto.Deal.Builder, coincheProto.DealOrBuilder> dealBuilder_;
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public boolean hasDeal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public coincheProto.Deal getDeal() {
        if (dealBuilder_ == null) {
          return deal_ == null ? coincheProto.Deal.getDefaultInstance() : deal_;
        } else {
          return dealBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public Builder setDeal(coincheProto.Deal value) {
        if (dealBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deal_ = value;
          onChanged();
        } else {
          dealBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public Builder setDeal(
          coincheProto.Deal.Builder builderForValue) {
        if (dealBuilder_ == null) {
          deal_ = builderForValue.build();
          onChanged();
        } else {
          dealBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public Builder mergeDeal(coincheProto.Deal value) {
        if (dealBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              deal_ != null &&
              deal_ != coincheProto.Deal.getDefaultInstance()) {
            deal_ =
              coincheProto.Deal.newBuilder(deal_).mergeFrom(value).buildPartial();
          } else {
            deal_ = value;
          }
          onChanged();
        } else {
          dealBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public Builder clearDeal() {
        if (dealBuilder_ == null) {
          deal_ = null;
          onChanged();
        } else {
          dealBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public coincheProto.Deal.Builder getDealBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDealFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      public coincheProto.DealOrBuilder getDealOrBuilder() {
        if (dealBuilder_ != null) {
          return dealBuilder_.getMessageOrBuilder();
        } else {
          return deal_ == null ?
              coincheProto.Deal.getDefaultInstance() : deal_;
        }
      }
      /**
       * <code>optional .Deal deal = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.Deal, coincheProto.Deal.Builder, coincheProto.DealOrBuilder> 
          getDealFieldBuilder() {
        if (dealBuilder_ == null) {
          dealBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.Deal, coincheProto.Deal.Builder, coincheProto.DealOrBuilder>(
                  getDeal(),
                  getParentForChildren(),
                  isClean());
          deal_ = null;
        }
        return dealBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlayerMsg)
    }

    // @@protoc_insertion_point(class_scope:PlayerMsg)
    private static final coincheProto.PlayerMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.PlayerMsg();
    }

    public static coincheProto.PlayerMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerMsg>
        PARSER = new com.google.protobuf.AbstractParser<PlayerMsg>() {
      public PlayerMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerMsg> getParserForType() {
      return PARSER;
    }

    public coincheProto.PlayerMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DealWinnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DealWinner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 player = 1;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required int32 player = 1;</code>
     */
    int getPlayer();

    /**
     * <code>required int32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>required int32 team = 2;</code>
     */
    int getTeam();

    /**
     * <code>required .TRUMP trump = 3;</code>
     */
    boolean hasTrump();
    /**
     * <code>required .TRUMP trump = 3;</code>
     */
    coincheProto.TRUMP getTrump();

    /**
     * <code>required int32 deal = 4;</code>
     */
    boolean hasDeal();
    /**
     * <code>required int32 deal = 4;</code>
     */
    int getDeal();
  }
  /**
   * <pre>
   * Server CMD
   * </pre>
   *
   * Protobuf type {@code DealWinner}
   */
  public  static final class DealWinner extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DealWinner)
      DealWinnerOrBuilder {
    // Use DealWinner.newBuilder() to construct.
    private DealWinner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DealWinner() {
      player_ = 0;
      team_ = 0;
      trump_ = 0;
      deal_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DealWinner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              player_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              coincheProto.TRUMP value = coincheProto.TRUMP.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                trump_ = rawValue;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              deal_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_DealWinner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_DealWinner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.DealWinner.class, coincheProto.DealWinner.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    /**
     * <code>required int32 player = 1;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 player = 1;</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>required int32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int TRUMP_FIELD_NUMBER = 3;
    private int trump_;
    /**
     * <code>required .TRUMP trump = 3;</code>
     */
    public boolean hasTrump() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .TRUMP trump = 3;</code>
     */
    public coincheProto.TRUMP getTrump() {
      coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
      return result == null ? coincheProto.TRUMP.TNONE : result;
    }

    public static final int DEAL_FIELD_NUMBER = 4;
    private int deal_;
    /**
     * <code>required int32 deal = 4;</code>
     */
    public boolean hasDeal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 deal = 4;</code>
     */
    public int getDeal() {
      return deal_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrump()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, trump_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, deal_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, trump_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, deal_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.DealWinner)) {
        return super.equals(obj);
      }
      coincheProto.DealWinner other = (coincheProto.DealWinner) obj;

      boolean result = true;
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && (getPlayer()
            == other.getPlayer());
      }
      result = result && (hasTeam() == other.hasTeam());
      if (hasTeam()) {
        result = result && (getTeam()
            == other.getTeam());
      }
      result = result && (hasTrump() == other.hasTrump());
      if (hasTrump()) {
        result = result && trump_ == other.trump_;
      }
      result = result && (hasDeal() == other.hasDeal());
      if (hasDeal()) {
        result = result && (getDeal()
            == other.getDeal());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer();
      }
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam();
      }
      if (hasTrump()) {
        hash = (37 * hash) + TRUMP_FIELD_NUMBER;
        hash = (53 * hash) + trump_;
      }
      if (hasDeal()) {
        hash = (37 * hash) + DEAL_FIELD_NUMBER;
        hash = (53 * hash) + getDeal();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.DealWinner parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DealWinner parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DealWinner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DealWinner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DealWinner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DealWinner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DealWinner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.DealWinner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.DealWinner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.DealWinner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.DealWinner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.DealWinner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.DealWinner prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Server CMD
     * </pre>
     *
     * Protobuf type {@code DealWinner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DealWinner)
        coincheProto.DealWinnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_DealWinner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_DealWinner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.DealWinner.class, coincheProto.DealWinner.Builder.class);
      }

      // Construct using coincheProto.DealWinner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        trump_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        deal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_DealWinner_descriptor;
      }

      public coincheProto.DealWinner getDefaultInstanceForType() {
        return coincheProto.DealWinner.getDefaultInstance();
      }

      public coincheProto.DealWinner build() {
        coincheProto.DealWinner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.DealWinner buildPartial() {
        coincheProto.DealWinner result = new coincheProto.DealWinner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.trump_ = trump_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deal_ = deal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.DealWinner) {
          return mergeFrom((coincheProto.DealWinner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.DealWinner other) {
        if (other == coincheProto.DealWinner.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasTrump()) {
          setTrump(other.getTrump());
        }
        if (other.hasDeal()) {
          setDeal(other.getDeal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayer()) {
          return false;
        }
        if (!hasTeam()) {
          return false;
        }
        if (!hasTrump()) {
          return false;
        }
        if (!hasDeal()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.DealWinner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.DealWinner) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int player_ ;
      /**
       * <code>required int32 player = 1;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 0;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>required int32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      private int trump_ = 0;
      /**
       * <code>required .TRUMP trump = 3;</code>
       */
      public boolean hasTrump() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .TRUMP trump = 3;</code>
       */
      public coincheProto.TRUMP getTrump() {
        coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
        return result == null ? coincheProto.TRUMP.TNONE : result;
      }
      /**
       * <code>required .TRUMP trump = 3;</code>
       */
      public Builder setTrump(coincheProto.TRUMP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        trump_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TRUMP trump = 3;</code>
       */
      public Builder clearTrump() {
        bitField0_ = (bitField0_ & ~0x00000004);
        trump_ = 0;
        onChanged();
        return this;
      }

      private int deal_ ;
      /**
       * <code>required int32 deal = 4;</code>
       */
      public boolean hasDeal() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 deal = 4;</code>
       */
      public int getDeal() {
        return deal_;
      }
      /**
       * <code>required int32 deal = 4;</code>
       */
      public Builder setDeal(int value) {
        bitField0_ |= 0x00000008;
        deal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 deal = 4;</code>
       */
      public Builder clearDeal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deal_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DealWinner)
    }

    // @@protoc_insertion_point(class_scope:DealWinner)
    private static final coincheProto.DealWinner DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.DealWinner();
    }

    public static coincheProto.DealWinner getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DealWinner>
        PARSER = new com.google.protobuf.AbstractParser<DealWinner>() {
      public DealWinner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DealWinner(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DealWinner> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealWinner> getParserForType() {
      return PARSER;
    }

    public coincheProto.DealWinner getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayedCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayedCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    coincheProto.CARD_NAME getName();

    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    coincheProto.CARD_COLOR getColor();

    /**
     * <code>required int32 player = 3;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required int32 player = 3;</code>
     */
    int getPlayer();

    /**
     * <code>required int32 team = 4;</code>
     */
    boolean hasTeam();
    /**
     * <code>required int32 team = 4;</code>
     */
    int getTeam();
  }
  /**
   * Protobuf type {@code PlayedCard}
   */
  public  static final class PlayedCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlayedCard)
      PlayedCardOrBuilder {
    // Use PlayedCard.newBuilder() to construct.
    private PlayedCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayedCard() {
      name_ = 0;
      color_ = 0;
      player_ = 0;
      team_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayedCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.CARD_NAME value = coincheProto.CARD_NAME.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                name_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              coincheProto.CARD_COLOR value = coincheProto.CARD_COLOR.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                color_ = rawValue;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              player_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              team_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_PlayedCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_PlayedCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.PlayedCard.class, coincheProto.PlayedCard.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public coincheProto.CARD_NAME getName() {
      coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
      return result == null ? coincheProto.CARD_NAME.ACE : result;
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public coincheProto.CARD_COLOR getColor() {
      coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
      return result == null ? coincheProto.CARD_COLOR.SPADE : result;
    }

    public static final int PLAYER_FIELD_NUMBER = 3;
    private int player_;
    /**
     * <code>required int32 player = 3;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 player = 3;</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int TEAM_FIELD_NUMBER = 4;
    private int team_;
    /**
     * <code>required int32 team = 4;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 team = 4;</code>
     */
    public int getTeam() {
      return team_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, player_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, team_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, color_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, player_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, team_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.PlayedCard)) {
        return super.equals(obj);
      }
      coincheProto.PlayedCard other = (coincheProto.PlayedCard) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && name_ == other.name_;
      }
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && color_ == other.color_;
      }
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && (getPlayer()
            == other.getPlayer());
      }
      result = result && (hasTeam() == other.hasTeam());
      if (hasTeam()) {
        result = result && (getTeam()
            == other.getTeam());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + name_;
      }
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + color_;
      }
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer();
      }
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.PlayedCard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayedCard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayedCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayedCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayedCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayedCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayedCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayedCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayedCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.PlayedCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayedCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayedCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.PlayedCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayedCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayedCard)
        coincheProto.PlayedCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_PlayedCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_PlayedCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.PlayedCard.class, coincheProto.PlayedCard.Builder.class);
      }

      // Construct using coincheProto.PlayedCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_PlayedCard_descriptor;
      }

      public coincheProto.PlayedCard getDefaultInstanceForType() {
        return coincheProto.PlayedCard.getDefaultInstance();
      }

      public coincheProto.PlayedCard build() {
        coincheProto.PlayedCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.PlayedCard buildPartial() {
        coincheProto.PlayedCard result = new coincheProto.PlayedCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.team_ = team_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.PlayedCard) {
          return mergeFrom((coincheProto.PlayedCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.PlayedCard other) {
        if (other == coincheProto.PlayedCard.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasColor()) {
          return false;
        }
        if (!hasPlayer()) {
          return false;
        }
        if (!hasTeam()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.PlayedCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.PlayedCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int name_ = 0;
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public coincheProto.CARD_NAME getName() {
        coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
        return result == null ? coincheProto.CARD_NAME.ACE : result;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder setName(coincheProto.CARD_NAME value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      private int color_ = 0;
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public coincheProto.CARD_COLOR getColor() {
        coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
        return result == null ? coincheProto.CARD_COLOR.SPADE : result;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder setColor(coincheProto.CARD_COLOR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        color_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }

      private int player_ ;
      /**
       * <code>required int32 player = 3;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 player = 3;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>required int32 player = 3;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000004;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 player = 3;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        player_ = 0;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>required int32 team = 4;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 team = 4;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>required int32 team = 4;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000008;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team = 4;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000008);
        team_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlayedCard)
    }

    // @@protoc_insertion_point(class_scope:PlayedCard)
    private static final coincheProto.PlayedCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.PlayedCard();
    }

    public static coincheProto.PlayedCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayedCard>
        PARSER = new com.google.protobuf.AbstractParser<PlayedCard>() {
      public PlayedCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayedCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayedCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayedCard> getParserForType() {
      return PARSER;
    }

    public coincheProto.PlayedCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActionValidationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ActionValidation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool accepted = 1;</code>
     */
    boolean hasAccepted();
    /**
     * <code>required bool accepted = 1;</code>
     */
    boolean getAccepted();
  }
  /**
   * Protobuf type {@code ActionValidation}
   */
  public  static final class ActionValidation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ActionValidation)
      ActionValidationOrBuilder {
    // Use ActionValidation.newBuilder() to construct.
    private ActionValidation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActionValidation() {
      accepted_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ActionValidation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accepted_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_ActionValidation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_ActionValidation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.ActionValidation.class, coincheProto.ActionValidation.Builder.class);
    }

    private int bitField0_;
    public static final int ACCEPTED_FIELD_NUMBER = 1;
    private boolean accepted_;
    /**
     * <code>required bool accepted = 1;</code>
     */
    public boolean hasAccepted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool accepted = 1;</code>
     */
    public boolean getAccepted() {
      return accepted_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAccepted()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, accepted_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, accepted_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.ActionValidation)) {
        return super.equals(obj);
      }
      coincheProto.ActionValidation other = (coincheProto.ActionValidation) obj;

      boolean result = true;
      result = result && (hasAccepted() == other.hasAccepted());
      if (hasAccepted()) {
        result = result && (getAccepted()
            == other.getAccepted());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccepted()) {
        hash = (37 * hash) + ACCEPTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAccepted());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.ActionValidation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ActionValidation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ActionValidation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ActionValidation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ActionValidation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ActionValidation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ActionValidation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.ActionValidation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.ActionValidation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.ActionValidation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.ActionValidation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.ActionValidation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.ActionValidation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ActionValidation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ActionValidation)
        coincheProto.ActionValidationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_ActionValidation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_ActionValidation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.ActionValidation.class, coincheProto.ActionValidation.Builder.class);
      }

      // Construct using coincheProto.ActionValidation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        accepted_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_ActionValidation_descriptor;
      }

      public coincheProto.ActionValidation getDefaultInstanceForType() {
        return coincheProto.ActionValidation.getDefaultInstance();
      }

      public coincheProto.ActionValidation build() {
        coincheProto.ActionValidation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.ActionValidation buildPartial() {
        coincheProto.ActionValidation result = new coincheProto.ActionValidation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accepted_ = accepted_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.ActionValidation) {
          return mergeFrom((coincheProto.ActionValidation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.ActionValidation other) {
        if (other == coincheProto.ActionValidation.getDefaultInstance()) return this;
        if (other.hasAccepted()) {
          setAccepted(other.getAccepted());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccepted()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.ActionValidation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.ActionValidation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean accepted_ ;
      /**
       * <code>required bool accepted = 1;</code>
       */
      public boolean hasAccepted() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool accepted = 1;</code>
       */
      public boolean getAccepted() {
        return accepted_;
      }
      /**
       * <code>required bool accepted = 1;</code>
       */
      public Builder setAccepted(boolean value) {
        bitField0_ |= 0x00000001;
        accepted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool accepted = 1;</code>
       */
      public Builder clearAccepted() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accepted_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ActionValidation)
    }

    // @@protoc_insertion_point(class_scope:ActionValidation)
    private static final coincheProto.ActionValidation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.ActionValidation();
    }

    public static coincheProto.ActionValidation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ActionValidation>
        PARSER = new com.google.protobuf.AbstractParser<ActionValidation>() {
      public ActionValidation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ActionValidation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ActionValidation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ActionValidation> getParserForType() {
      return PARSER;
    }

    public coincheProto.ActionValidation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameWinnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GameWinner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 team1Score = 1;</code>
     */
    boolean hasTeam1Score();
    /**
     * <code>required int32 team1Score = 1;</code>
     */
    int getTeam1Score();

    /**
     * <code>required int32 team2Score = 2;</code>
     */
    boolean hasTeam2Score();
    /**
     * <code>required int32 team2Score = 2;</code>
     */
    int getTeam2Score();

    /**
     * <code>required int32 dealerTeam = 3;</code>
     */
    boolean hasDealerTeam();
    /**
     * <code>required int32 dealerTeam = 3;</code>
     */
    int getDealerTeam();

    /**
     * <code>required bool winDeal = 4;</code>
     */
    boolean hasWinDeal();
    /**
     * <code>required bool winDeal = 4;</code>
     */
    boolean getWinDeal();
  }
  /**
   * Protobuf type {@code GameWinner}
   */
  public  static final class GameWinner extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GameWinner)
      GameWinnerOrBuilder {
    // Use GameWinner.newBuilder() to construct.
    private GameWinner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameWinner() {
      team1Score_ = 0;
      team2Score_ = 0;
      dealerTeam_ = 0;
      winDeal_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameWinner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              team1Score_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team2Score_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dealerTeam_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              winDeal_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_GameWinner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_GameWinner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.GameWinner.class, coincheProto.GameWinner.Builder.class);
    }

    private int bitField0_;
    public static final int TEAM1SCORE_FIELD_NUMBER = 1;
    private int team1Score_;
    /**
     * <code>required int32 team1Score = 1;</code>
     */
    public boolean hasTeam1Score() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 team1Score = 1;</code>
     */
    public int getTeam1Score() {
      return team1Score_;
    }

    public static final int TEAM2SCORE_FIELD_NUMBER = 2;
    private int team2Score_;
    /**
     * <code>required int32 team2Score = 2;</code>
     */
    public boolean hasTeam2Score() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 team2Score = 2;</code>
     */
    public int getTeam2Score() {
      return team2Score_;
    }

    public static final int DEALERTEAM_FIELD_NUMBER = 3;
    private int dealerTeam_;
    /**
     * <code>required int32 dealerTeam = 3;</code>
     */
    public boolean hasDealerTeam() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 dealerTeam = 3;</code>
     */
    public int getDealerTeam() {
      return dealerTeam_;
    }

    public static final int WINDEAL_FIELD_NUMBER = 4;
    private boolean winDeal_;
    /**
     * <code>required bool winDeal = 4;</code>
     */
    public boolean hasWinDeal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool winDeal = 4;</code>
     */
    public boolean getWinDeal() {
      return winDeal_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTeam1Score()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeam2Score()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDealerTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWinDeal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, team1Score_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, team2Score_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dealerTeam_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, winDeal_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, team1Score_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, team2Score_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dealerTeam_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, winDeal_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.GameWinner)) {
        return super.equals(obj);
      }
      coincheProto.GameWinner other = (coincheProto.GameWinner) obj;

      boolean result = true;
      result = result && (hasTeam1Score() == other.hasTeam1Score());
      if (hasTeam1Score()) {
        result = result && (getTeam1Score()
            == other.getTeam1Score());
      }
      result = result && (hasTeam2Score() == other.hasTeam2Score());
      if (hasTeam2Score()) {
        result = result && (getTeam2Score()
            == other.getTeam2Score());
      }
      result = result && (hasDealerTeam() == other.hasDealerTeam());
      if (hasDealerTeam()) {
        result = result && (getDealerTeam()
            == other.getDealerTeam());
      }
      result = result && (hasWinDeal() == other.hasWinDeal());
      if (hasWinDeal()) {
        result = result && (getWinDeal()
            == other.getWinDeal());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTeam1Score()) {
        hash = (37 * hash) + TEAM1SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getTeam1Score();
      }
      if (hasTeam2Score()) {
        hash = (37 * hash) + TEAM2SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getTeam2Score();
      }
      if (hasDealerTeam()) {
        hash = (37 * hash) + DEALERTEAM_FIELD_NUMBER;
        hash = (53 * hash) + getDealerTeam();
      }
      if (hasWinDeal()) {
        hash = (37 * hash) + WINDEAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWinDeal());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.GameWinner parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.GameWinner parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.GameWinner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.GameWinner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.GameWinner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.GameWinner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.GameWinner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.GameWinner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.GameWinner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.GameWinner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.GameWinner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.GameWinner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.GameWinner prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameWinner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GameWinner)
        coincheProto.GameWinnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_GameWinner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_GameWinner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.GameWinner.class, coincheProto.GameWinner.Builder.class);
      }

      // Construct using coincheProto.GameWinner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        team1Score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        team2Score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dealerTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        winDeal_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_GameWinner_descriptor;
      }

      public coincheProto.GameWinner getDefaultInstanceForType() {
        return coincheProto.GameWinner.getDefaultInstance();
      }

      public coincheProto.GameWinner build() {
        coincheProto.GameWinner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.GameWinner buildPartial() {
        coincheProto.GameWinner result = new coincheProto.GameWinner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.team1Score_ = team1Score_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team2Score_ = team2Score_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dealerTeam_ = dealerTeam_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.winDeal_ = winDeal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.GameWinner) {
          return mergeFrom((coincheProto.GameWinner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.GameWinner other) {
        if (other == coincheProto.GameWinner.getDefaultInstance()) return this;
        if (other.hasTeam1Score()) {
          setTeam1Score(other.getTeam1Score());
        }
        if (other.hasTeam2Score()) {
          setTeam2Score(other.getTeam2Score());
        }
        if (other.hasDealerTeam()) {
          setDealerTeam(other.getDealerTeam());
        }
        if (other.hasWinDeal()) {
          setWinDeal(other.getWinDeal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeam1Score()) {
          return false;
        }
        if (!hasTeam2Score()) {
          return false;
        }
        if (!hasDealerTeam()) {
          return false;
        }
        if (!hasWinDeal()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.GameWinner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.GameWinner) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int team1Score_ ;
      /**
       * <code>required int32 team1Score = 1;</code>
       */
      public boolean hasTeam1Score() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 team1Score = 1;</code>
       */
      public int getTeam1Score() {
        return team1Score_;
      }
      /**
       * <code>required int32 team1Score = 1;</code>
       */
      public Builder setTeam1Score(int value) {
        bitField0_ |= 0x00000001;
        team1Score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team1Score = 1;</code>
       */
      public Builder clearTeam1Score() {
        bitField0_ = (bitField0_ & ~0x00000001);
        team1Score_ = 0;
        onChanged();
        return this;
      }

      private int team2Score_ ;
      /**
       * <code>required int32 team2Score = 2;</code>
       */
      public boolean hasTeam2Score() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 team2Score = 2;</code>
       */
      public int getTeam2Score() {
        return team2Score_;
      }
      /**
       * <code>required int32 team2Score = 2;</code>
       */
      public Builder setTeam2Score(int value) {
        bitField0_ |= 0x00000002;
        team2Score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team2Score = 2;</code>
       */
      public Builder clearTeam2Score() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team2Score_ = 0;
        onChanged();
        return this;
      }

      private int dealerTeam_ ;
      /**
       * <code>required int32 dealerTeam = 3;</code>
       */
      public boolean hasDealerTeam() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 dealerTeam = 3;</code>
       */
      public int getDealerTeam() {
        return dealerTeam_;
      }
      /**
       * <code>required int32 dealerTeam = 3;</code>
       */
      public Builder setDealerTeam(int value) {
        bitField0_ |= 0x00000004;
        dealerTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dealerTeam = 3;</code>
       */
      public Builder clearDealerTeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dealerTeam_ = 0;
        onChanged();
        return this;
      }

      private boolean winDeal_ ;
      /**
       * <code>required bool winDeal = 4;</code>
       */
      public boolean hasWinDeal() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool winDeal = 4;</code>
       */
      public boolean getWinDeal() {
        return winDeal_;
      }
      /**
       * <code>required bool winDeal = 4;</code>
       */
      public Builder setWinDeal(boolean value) {
        bitField0_ |= 0x00000008;
        winDeal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool winDeal = 4;</code>
       */
      public Builder clearWinDeal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        winDeal_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GameWinner)
    }

    // @@protoc_insertion_point(class_scope:GameWinner)
    private static final coincheProto.GameWinner DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.GameWinner();
    }

    public static coincheProto.GameWinner getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameWinner>
        PARSER = new com.google.protobuf.AbstractParser<GameWinner>() {
      public GameWinner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GameWinner(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameWinner> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameWinner> getParserForType() {
      return PARSER;
    }

    public coincheProto.GameWinner getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DrawCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DrawCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    coincheProto.CARD_NAME getName();

    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    coincheProto.CARD_COLOR getColor();
  }
  /**
   * Protobuf type {@code DrawCard}
   */
  public  static final class DrawCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DrawCard)
      DrawCardOrBuilder {
    // Use DrawCard.newBuilder() to construct.
    private DrawCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DrawCard() {
      name_ = 0;
      color_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DrawCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.CARD_NAME value = coincheProto.CARD_NAME.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                name_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              coincheProto.CARD_COLOR value = coincheProto.CARD_COLOR.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                color_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_DrawCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_DrawCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.DrawCard.class, coincheProto.DrawCard.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .CARD_NAME name = 1;</code>
     */
    public coincheProto.CARD_NAME getName() {
      coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
      return result == null ? coincheProto.CARD_NAME.ACE : result;
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_;
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .CARD_COLOR color = 2;</code>
     */
    public coincheProto.CARD_COLOR getColor() {
      coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
      return result == null ? coincheProto.CARD_COLOR.SPADE : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, color_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, color_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.DrawCard)) {
        return super.equals(obj);
      }
      coincheProto.DrawCard other = (coincheProto.DrawCard) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && name_ == other.name_;
      }
      result = result && (hasColor() == other.hasColor());
      if (hasColor()) {
        result = result && color_ == other.color_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + name_;
      }
      if (hasColor()) {
        hash = (37 * hash) + COLOR_FIELD_NUMBER;
        hash = (53 * hash) + color_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.DrawCard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DrawCard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DrawCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DrawCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DrawCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.DrawCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.DrawCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.DrawCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.DrawCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.DrawCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.DrawCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.DrawCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.DrawCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DrawCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DrawCard)
        coincheProto.DrawCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_DrawCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_DrawCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.DrawCard.class, coincheProto.DrawCard.Builder.class);
      }

      // Construct using coincheProto.DrawCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_DrawCard_descriptor;
      }

      public coincheProto.DrawCard getDefaultInstanceForType() {
        return coincheProto.DrawCard.getDefaultInstance();
      }

      public coincheProto.DrawCard build() {
        coincheProto.DrawCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.DrawCard buildPartial() {
        coincheProto.DrawCard result = new coincheProto.DrawCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.DrawCard) {
          return mergeFrom((coincheProto.DrawCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.DrawCard other) {
        if (other == coincheProto.DrawCard.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasColor()) {
          setColor(other.getColor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasColor()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.DrawCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.DrawCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int name_ = 0;
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public coincheProto.CARD_NAME getName() {
        coincheProto.CARD_NAME result = coincheProto.CARD_NAME.valueOf(name_);
        return result == null ? coincheProto.CARD_NAME.ACE : result;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder setName(coincheProto.CARD_NAME value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        name_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_NAME name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      private int color_ = 0;
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public coincheProto.CARD_COLOR getColor() {
        coincheProto.CARD_COLOR result = coincheProto.CARD_COLOR.valueOf(color_);
        return result == null ? coincheProto.CARD_COLOR.SPADE : result;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder setColor(coincheProto.CARD_COLOR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        color_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .CARD_COLOR color = 2;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DrawCard)
    }

    // @@protoc_insertion_point(class_scope:DrawCard)
    private static final coincheProto.DrawCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.DrawCard();
    }

    public static coincheProto.DrawCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DrawCard>
        PARSER = new com.google.protobuf.AbstractParser<DrawCard>() {
      public DrawCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DrawCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DrawCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DrawCard> getParserForType() {
      return PARSER;
    }

    public coincheProto.DrawCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StackWinnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StackWinner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 team = 1;</code>
     */
    boolean hasTeam();
    /**
     * <code>required int32 team = 1;</code>
     */
    int getTeam();

    /**
     * <code>required int32 player = 2;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required int32 player = 2;</code>
     */
    int getPlayer();

    /**
     * <code>required int32 score = 3;</code>
     */
    boolean hasScore();
    /**
     * <code>required int32 score = 3;</code>
     */
    int getScore();
  }
  /**
   * Protobuf type {@code StackWinner}
   */
  public  static final class StackWinner extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:StackWinner)
      StackWinnerOrBuilder {
    // Use StackWinner.newBuilder() to construct.
    private StackWinner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StackWinner() {
      team_ = 0;
      player_ = 0;
      score_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StackWinner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              team_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              player_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              score_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_StackWinner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_StackWinner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.StackWinner.class, coincheProto.StackWinner.Builder.class);
    }

    private int bitField0_;
    public static final int TEAM_FIELD_NUMBER = 1;
    private int team_;
    /**
     * <code>required int32 team = 1;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 team = 1;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int PLAYER_FIELD_NUMBER = 2;
    private int player_;
    /**
     * <code>required int32 player = 2;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 player = 2;</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private int score_;
    /**
     * <code>required int32 score = 3;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 score = 3;</code>
     */
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, player_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, score_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, team_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, player_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.StackWinner)) {
        return super.equals(obj);
      }
      coincheProto.StackWinner other = (coincheProto.StackWinner) obj;

      boolean result = true;
      result = result && (hasTeam() == other.hasTeam());
      if (hasTeam()) {
        result = result && (getTeam()
            == other.getTeam());
      }
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && (getPlayer()
            == other.getPlayer());
      }
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (getScore()
            == other.getScore());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam();
      }
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getScore();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.StackWinner parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.StackWinner parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.StackWinner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.StackWinner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.StackWinner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.StackWinner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.StackWinner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.StackWinner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.StackWinner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.StackWinner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.StackWinner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.StackWinner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.StackWinner prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StackWinner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StackWinner)
        coincheProto.StackWinnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_StackWinner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_StackWinner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.StackWinner.class, coincheProto.StackWinner.Builder.class);
      }

      // Construct using coincheProto.StackWinner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_StackWinner_descriptor;
      }

      public coincheProto.StackWinner getDefaultInstanceForType() {
        return coincheProto.StackWinner.getDefaultInstance();
      }

      public coincheProto.StackWinner build() {
        coincheProto.StackWinner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.StackWinner buildPartial() {
        coincheProto.StackWinner result = new coincheProto.StackWinner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.StackWinner) {
          return mergeFrom((coincheProto.StackWinner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.StackWinner other) {
        if (other == coincheProto.StackWinner.getDefaultInstance()) return this;
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeam()) {
          return false;
        }
        if (!hasPlayer()) {
          return false;
        }
        if (!hasScore()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.StackWinner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.StackWinner) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int team_ ;
      /**
       * <code>required int32 team = 1;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 team = 1;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>required int32 team = 1;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000001;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team = 1;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        onChanged();
        return this;
      }

      private int player_ ;
      /**
       * <code>required int32 player = 2;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 player = 2;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>required int32 player = 2;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000002;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 player = 2;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        player_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>required int32 score = 3;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 score = 3;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>required int32 score = 3;</code>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000004;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 score = 3;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:StackWinner)
    }

    // @@protoc_insertion_point(class_scope:StackWinner)
    private static final coincheProto.StackWinner DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.StackWinner();
    }

    public static coincheProto.StackWinner getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StackWinner>
        PARSER = new com.google.protobuf.AbstractParser<StackWinner>() {
      public StackWinner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StackWinner(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StackWinner> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StackWinner> getParserForType() {
      return PARSER;
    }

    public coincheProto.StackWinner getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerDealedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerDealed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 player = 1;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required int32 player = 1;</code>
     */
    int getPlayer();

    /**
     * <code>required int32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>required int32 team = 2;</code>
     */
    int getTeam();

    /**
     * <code>required int32 deal = 3;</code>
     */
    boolean hasDeal();
    /**
     * <code>required int32 deal = 3;</code>
     */
    int getDeal();

    /**
     * <code>required .TRUMP trump = 4;</code>
     */
    boolean hasTrump();
    /**
     * <code>required .TRUMP trump = 4;</code>
     */
    coincheProto.TRUMP getTrump();
  }
  /**
   * Protobuf type {@code PlayerDealed}
   */
  public  static final class PlayerDealed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlayerDealed)
      PlayerDealedOrBuilder {
    // Use PlayerDealed.newBuilder() to construct.
    private PlayerDealed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerDealed() {
      player_ = 0;
      team_ = 0;
      deal_ = 0;
      trump_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerDealed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              player_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              deal_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              coincheProto.TRUMP value = coincheProto.TRUMP.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                trump_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_PlayerDealed_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_PlayerDealed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.PlayerDealed.class, coincheProto.PlayerDealed.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    /**
     * <code>required int32 player = 1;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 player = 1;</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>required int32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int DEAL_FIELD_NUMBER = 3;
    private int deal_;
    /**
     * <code>required int32 deal = 3;</code>
     */
    public boolean hasDeal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 deal = 3;</code>
     */
    public int getDeal() {
      return deal_;
    }

    public static final int TRUMP_FIELD_NUMBER = 4;
    private int trump_;
    /**
     * <code>required .TRUMP trump = 4;</code>
     */
    public boolean hasTrump() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .TRUMP trump = 4;</code>
     */
    public coincheProto.TRUMP getTrump() {
      coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
      return result == null ? coincheProto.TRUMP.TNONE : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrump()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, deal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, trump_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, deal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, trump_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.PlayerDealed)) {
        return super.equals(obj);
      }
      coincheProto.PlayerDealed other = (coincheProto.PlayerDealed) obj;

      boolean result = true;
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && (getPlayer()
            == other.getPlayer());
      }
      result = result && (hasTeam() == other.hasTeam());
      if (hasTeam()) {
        result = result && (getTeam()
            == other.getTeam());
      }
      result = result && (hasDeal() == other.hasDeal());
      if (hasDeal()) {
        result = result && (getDeal()
            == other.getDeal());
      }
      result = result && (hasTrump() == other.hasTrump());
      if (hasTrump()) {
        result = result && trump_ == other.trump_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer();
      }
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam();
      }
      if (hasDeal()) {
        hash = (37 * hash) + DEAL_FIELD_NUMBER;
        hash = (53 * hash) + getDeal();
      }
      if (hasTrump()) {
        hash = (37 * hash) + TRUMP_FIELD_NUMBER;
        hash = (53 * hash) + trump_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.PlayerDealed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerDealed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerDealed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerDealed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerDealed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerDealed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerDealed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerDealed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerDealed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerDealed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerDealed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerDealed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.PlayerDealed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerDealed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerDealed)
        coincheProto.PlayerDealedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_PlayerDealed_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_PlayerDealed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.PlayerDealed.class, coincheProto.PlayerDealed.Builder.class);
      }

      // Construct using coincheProto.PlayerDealed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        deal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        trump_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_PlayerDealed_descriptor;
      }

      public coincheProto.PlayerDealed getDefaultInstanceForType() {
        return coincheProto.PlayerDealed.getDefaultInstance();
      }

      public coincheProto.PlayerDealed build() {
        coincheProto.PlayerDealed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.PlayerDealed buildPartial() {
        coincheProto.PlayerDealed result = new coincheProto.PlayerDealed(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deal_ = deal_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.trump_ = trump_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.PlayerDealed) {
          return mergeFrom((coincheProto.PlayerDealed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.PlayerDealed other) {
        if (other == coincheProto.PlayerDealed.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasDeal()) {
          setDeal(other.getDeal());
        }
        if (other.hasTrump()) {
          setTrump(other.getTrump());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayer()) {
          return false;
        }
        if (!hasTeam()) {
          return false;
        }
        if (!hasDeal()) {
          return false;
        }
        if (!hasTrump()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.PlayerDealed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.PlayerDealed) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int player_ ;
      /**
       * <code>required int32 player = 1;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 player = 1;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 0;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>required int32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      private int deal_ ;
      /**
       * <code>required int32 deal = 3;</code>
       */
      public boolean hasDeal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 deal = 3;</code>
       */
      public int getDeal() {
        return deal_;
      }
      /**
       * <code>required int32 deal = 3;</code>
       */
      public Builder setDeal(int value) {
        bitField0_ |= 0x00000004;
        deal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 deal = 3;</code>
       */
      public Builder clearDeal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deal_ = 0;
        onChanged();
        return this;
      }

      private int trump_ = 0;
      /**
       * <code>required .TRUMP trump = 4;</code>
       */
      public boolean hasTrump() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .TRUMP trump = 4;</code>
       */
      public coincheProto.TRUMP getTrump() {
        coincheProto.TRUMP result = coincheProto.TRUMP.valueOf(trump_);
        return result == null ? coincheProto.TRUMP.TNONE : result;
      }
      /**
       * <code>required .TRUMP trump = 4;</code>
       */
      public Builder setTrump(coincheProto.TRUMP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        trump_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TRUMP trump = 4;</code>
       */
      public Builder clearTrump() {
        bitField0_ = (bitField0_ & ~0x00000008);
        trump_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlayerDealed)
    }

    // @@protoc_insertion_point(class_scope:PlayerDealed)
    private static final coincheProto.PlayerDealed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.PlayerDealed();
    }

    public static coincheProto.PlayerDealed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerDealed>
        PARSER = new com.google.protobuf.AbstractParser<PlayerDealed>() {
      public PlayerDealed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDealed(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerDealed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDealed> getParserForType() {
      return PARSER;
    }

    public coincheProto.PlayerDealed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .PlayerState.State state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .PlayerState.State state = 1;</code>
     */
    coincheProto.PlayerState.State getState();

    /**
     * <code>required int32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>required int32 team = 2;</code>
     */
    int getTeam();

    /**
     * <code>required int32 Player = 3;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required int32 Player = 3;</code>
     */
    int getPlayer();
  }
  /**
   * Protobuf type {@code PlayerState}
   */
  public  static final class PlayerState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlayerState)
      PlayerStateOrBuilder {
    // Use PlayerState.newBuilder() to construct.
    private PlayerState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerState() {
      state_ = 0;
      team_ = 0;
      player_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.PlayerState.State value = coincheProto.PlayerState.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              player_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_PlayerState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_PlayerState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.PlayerState.class, coincheProto.PlayerState.Builder.class);
    }

    /**
     * Protobuf enum {@code PlayerState.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>WAITINGGAME = 0;</code>
       */
      WAITINGGAME(0),
      /**
       * <code>PLAYING = 1;</code>
       */
      PLAYING(1),
      /**
       * <code>YOURTURN = 2;</code>
       */
      YOURTURN(2),
      /**
       * <code>LEAVE = 3;</code>
       */
      LEAVE(3),
      /**
       * <code>DEAL = 4;</code>
       */
      DEAL(4),
      ;

      /**
       * <code>WAITINGGAME = 0;</code>
       */
      public static final int WAITINGGAME_VALUE = 0;
      /**
       * <code>PLAYING = 1;</code>
       */
      public static final int PLAYING_VALUE = 1;
      /**
       * <code>YOURTURN = 2;</code>
       */
      public static final int YOURTURN_VALUE = 2;
      /**
       * <code>LEAVE = 3;</code>
       */
      public static final int LEAVE_VALUE = 3;
      /**
       * <code>DEAL = 4;</code>
       */
      public static final int DEAL_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      public static State forNumber(int value) {
        switch (value) {
          case 0: return WAITINGGAME;
          case 1: return PLAYING;
          case 2: return YOURTURN;
          case 3: return LEAVE;
          case 4: return DEAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return coincheProto.PlayerState.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PlayerState.State)
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>required .PlayerState.State state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PlayerState.State state = 1;</code>
     */
    public coincheProto.PlayerState.State getState() {
      coincheProto.PlayerState.State result = coincheProto.PlayerState.State.valueOf(state_);
      return result == null ? coincheProto.PlayerState.State.WAITINGGAME : result;
    }

    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>required int32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int PLAYER_FIELD_NUMBER = 3;
    private int player_;
    /**
     * <code>required int32 Player = 3;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 Player = 3;</code>
     */
    public int getPlayer() {
      return player_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, player_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, player_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.PlayerState)) {
        return super.equals(obj);
      }
      coincheProto.PlayerState other = (coincheProto.PlayerState) obj;

      boolean result = true;
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && state_ == other.state_;
      }
      result = result && (hasTeam() == other.hasTeam());
      if (hasTeam()) {
        result = result && (getTeam()
            == other.getTeam());
      }
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && (getPlayer()
            == other.getPlayer());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam();
      }
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.PlayerState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.PlayerState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.PlayerState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.PlayerState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.PlayerState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.PlayerState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerState)
        coincheProto.PlayerStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_PlayerState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_PlayerState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.PlayerState.class, coincheProto.PlayerState.Builder.class);
      }

      // Construct using coincheProto.PlayerState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        player_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_PlayerState_descriptor;
      }

      public coincheProto.PlayerState getDefaultInstanceForType() {
        return coincheProto.PlayerState.getDefaultInstance();
      }

      public coincheProto.PlayerState build() {
        coincheProto.PlayerState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.PlayerState buildPartial() {
        coincheProto.PlayerState result = new coincheProto.PlayerState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.player_ = player_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.PlayerState) {
          return mergeFrom((coincheProto.PlayerState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.PlayerState other) {
        if (other == coincheProto.PlayerState.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          return false;
        }
        if (!hasTeam()) {
          return false;
        }
        if (!hasPlayer()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.PlayerState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.PlayerState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int state_ = 0;
      /**
       * <code>required .PlayerState.State state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PlayerState.State state = 1;</code>
       */
      public coincheProto.PlayerState.State getState() {
        coincheProto.PlayerState.State result = coincheProto.PlayerState.State.valueOf(state_);
        return result == null ? coincheProto.PlayerState.State.WAITINGGAME : result;
      }
      /**
       * <code>required .PlayerState.State state = 1;</code>
       */
      public Builder setState(coincheProto.PlayerState.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .PlayerState.State state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>required int32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      private int player_ ;
      /**
       * <code>required int32 Player = 3;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 Player = 3;</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>required int32 Player = 3;</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000004;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Player = 3;</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        player_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlayerState)
    }

    // @@protoc_insertion_point(class_scope:PlayerState)
    private static final coincheProto.PlayerState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.PlayerState();
    }

    public static coincheProto.PlayerState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerState>
        PARSER = new com.google.protobuf.AbstractParser<PlayerState>() {
      public PlayerState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerState> getParserForType() {
      return PARSER;
    }

    public coincheProto.PlayerState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServerMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ServerMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
     */
    boolean hasTypeMessage();
    /**
     * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
     */
    coincheProto.ServerMsg.TypeMessage getTypeMessage();

    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    boolean hasDealWinner();
    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    coincheProto.DealWinner getDealWinner();
    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    coincheProto.DealWinnerOrBuilder getDealWinnerOrBuilder();

    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    boolean hasPlayedCard();
    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    coincheProto.PlayedCard getPlayedCard();
    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    coincheProto.PlayedCardOrBuilder getPlayedCardOrBuilder();

    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    boolean hasActionValidation();
    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    coincheProto.ActionValidation getActionValidation();
    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    coincheProto.ActionValidationOrBuilder getActionValidationOrBuilder();

    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    boolean hasWinner();
    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    coincheProto.GameWinner getWinner();
    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    coincheProto.GameWinnerOrBuilder getWinnerOrBuilder();

    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    boolean hasDrawCard();
    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    coincheProto.DrawCard getDrawCard();
    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    coincheProto.DrawCardOrBuilder getDrawCardOrBuilder();

    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    boolean hasStackWinner();
    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    coincheProto.StackWinner getStackWinner();
    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    coincheProto.StackWinnerOrBuilder getStackWinnerOrBuilder();

    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    boolean hasPlayerState();
    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    coincheProto.PlayerState getPlayerState();
    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    coincheProto.PlayerStateOrBuilder getPlayerStateOrBuilder();

    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    boolean hasPlayerDealed();
    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    coincheProto.PlayerDealed getPlayerDealed();
    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    coincheProto.PlayerDealedOrBuilder getPlayerDealedOrBuilder();
  }
  /**
   * <pre>
   * Msg encapsulation
   * </pre>
   *
   * Protobuf type {@code ServerMsg}
   */
  public  static final class ServerMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ServerMsg)
      ServerMsgOrBuilder {
    // Use ServerMsg.newBuilder() to construct.
    private ServerMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerMsg() {
      typeMessage_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServerMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              coincheProto.ServerMsg.TypeMessage value = coincheProto.ServerMsg.TypeMessage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                typeMessage_ = rawValue;
              }
              break;
            }
            case 18: {
              coincheProto.DealWinner.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = dealWinner_.toBuilder();
              }
              dealWinner_ = input.readMessage(coincheProto.DealWinner.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dealWinner_);
                dealWinner_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              coincheProto.PlayedCard.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = playedCard_.toBuilder();
              }
              playedCard_ = input.readMessage(coincheProto.PlayedCard.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playedCard_);
                playedCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              coincheProto.ActionValidation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = actionValidation_.toBuilder();
              }
              actionValidation_ = input.readMessage(coincheProto.ActionValidation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actionValidation_);
                actionValidation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              coincheProto.GameWinner.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = winner_.toBuilder();
              }
              winner_ = input.readMessage(coincheProto.GameWinner.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(winner_);
                winner_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              coincheProto.DrawCard.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = drawCard_.toBuilder();
              }
              drawCard_ = input.readMessage(coincheProto.DrawCard.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(drawCard_);
                drawCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              coincheProto.StackWinner.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = stackWinner_.toBuilder();
              }
              stackWinner_ = input.readMessage(coincheProto.StackWinner.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stackWinner_);
                stackWinner_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              coincheProto.PlayerState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = playerState_.toBuilder();
              }
              playerState_ = input.readMessage(coincheProto.PlayerState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerState_);
                playerState_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              coincheProto.PlayerDealed.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = playerDealed_.toBuilder();
              }
              playerDealed_ = input.readMessage(coincheProto.PlayerDealed.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerDealed_);
                playerDealed_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return coincheProto.internal_static_ServerMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return coincheProto.internal_static_ServerMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              coincheProto.ServerMsg.class, coincheProto.ServerMsg.Builder.class);
    }

    /**
     * Protobuf enum {@code ServerMsg.TypeMessage}
     */
    public enum TypeMessage
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DEALWINNER = 0;</code>
       */
      DEALWINNER(0),
      /**
       * <code>PLAYEDCARD = 1;</code>
       */
      PLAYEDCARD(1),
      /**
       * <code>ACTIONVALIDATION = 2;</code>
       */
      ACTIONVALIDATION(2),
      /**
       * <code>WINNER = 3;</code>
       */
      WINNER(3),
      /**
       * <code>DRAWCARD = 4;</code>
       */
      DRAWCARD(4),
      /**
       * <code>STACKWINNER = 5;</code>
       */
      STACKWINNER(5),
      /**
       * <code>PLAYERSTATE = 6;</code>
       */
      PLAYERSTATE(6),
      /**
       * <code>PLAYERDEALED = 7;</code>
       */
      PLAYERDEALED(7),
      ;

      /**
       * <code>DEALWINNER = 0;</code>
       */
      public static final int DEALWINNER_VALUE = 0;
      /**
       * <code>PLAYEDCARD = 1;</code>
       */
      public static final int PLAYEDCARD_VALUE = 1;
      /**
       * <code>ACTIONVALIDATION = 2;</code>
       */
      public static final int ACTIONVALIDATION_VALUE = 2;
      /**
       * <code>WINNER = 3;</code>
       */
      public static final int WINNER_VALUE = 3;
      /**
       * <code>DRAWCARD = 4;</code>
       */
      public static final int DRAWCARD_VALUE = 4;
      /**
       * <code>STACKWINNER = 5;</code>
       */
      public static final int STACKWINNER_VALUE = 5;
      /**
       * <code>PLAYERSTATE = 6;</code>
       */
      public static final int PLAYERSTATE_VALUE = 6;
      /**
       * <code>PLAYERDEALED = 7;</code>
       */
      public static final int PLAYERDEALED_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeMessage valueOf(int value) {
        return forNumber(value);
      }

      public static TypeMessage forNumber(int value) {
        switch (value) {
          case 0: return DEALWINNER;
          case 1: return PLAYEDCARD;
          case 2: return ACTIONVALIDATION;
          case 3: return WINNER;
          case 4: return DRAWCARD;
          case 5: return STACKWINNER;
          case 6: return PLAYERSTATE;
          case 7: return PLAYERDEALED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TypeMessage>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TypeMessage> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TypeMessage>() {
              public TypeMessage findValueByNumber(int number) {
                return TypeMessage.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return coincheProto.ServerMsg.getDescriptor().getEnumTypes().get(0);
      }

      private static final TypeMessage[] VALUES = values();

      public static TypeMessage valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TypeMessage(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ServerMsg.TypeMessage)
    }

    private int bitField0_;
    public static final int TYPEMESSAGE_FIELD_NUMBER = 1;
    private int typeMessage_;
    /**
     * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
     */
    public boolean hasTypeMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
     */
    public coincheProto.ServerMsg.TypeMessage getTypeMessage() {
      coincheProto.ServerMsg.TypeMessage result = coincheProto.ServerMsg.TypeMessage.valueOf(typeMessage_);
      return result == null ? coincheProto.ServerMsg.TypeMessage.DEALWINNER : result;
    }

    public static final int DEALWINNER_FIELD_NUMBER = 2;
    private coincheProto.DealWinner dealWinner_;
    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    public boolean hasDealWinner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    public coincheProto.DealWinner getDealWinner() {
      return dealWinner_ == null ? coincheProto.DealWinner.getDefaultInstance() : dealWinner_;
    }
    /**
     * <code>optional .DealWinner dealWinner = 2;</code>
     */
    public coincheProto.DealWinnerOrBuilder getDealWinnerOrBuilder() {
      return dealWinner_ == null ? coincheProto.DealWinner.getDefaultInstance() : dealWinner_;
    }

    public static final int PLAYEDCARD_FIELD_NUMBER = 3;
    private coincheProto.PlayedCard playedCard_;
    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    public boolean hasPlayedCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    public coincheProto.PlayedCard getPlayedCard() {
      return playedCard_ == null ? coincheProto.PlayedCard.getDefaultInstance() : playedCard_;
    }
    /**
     * <code>optional .PlayedCard playedCard = 3;</code>
     */
    public coincheProto.PlayedCardOrBuilder getPlayedCardOrBuilder() {
      return playedCard_ == null ? coincheProto.PlayedCard.getDefaultInstance() : playedCard_;
    }

    public static final int ACTIONVALIDATION_FIELD_NUMBER = 4;
    private coincheProto.ActionValidation actionValidation_;
    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    public boolean hasActionValidation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    public coincheProto.ActionValidation getActionValidation() {
      return actionValidation_ == null ? coincheProto.ActionValidation.getDefaultInstance() : actionValidation_;
    }
    /**
     * <code>optional .ActionValidation actionValidation = 4;</code>
     */
    public coincheProto.ActionValidationOrBuilder getActionValidationOrBuilder() {
      return actionValidation_ == null ? coincheProto.ActionValidation.getDefaultInstance() : actionValidation_;
    }

    public static final int WINNER_FIELD_NUMBER = 5;
    private coincheProto.GameWinner winner_;
    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    public boolean hasWinner() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    public coincheProto.GameWinner getWinner() {
      return winner_ == null ? coincheProto.GameWinner.getDefaultInstance() : winner_;
    }
    /**
     * <code>optional .GameWinner winner = 5;</code>
     */
    public coincheProto.GameWinnerOrBuilder getWinnerOrBuilder() {
      return winner_ == null ? coincheProto.GameWinner.getDefaultInstance() : winner_;
    }

    public static final int DRAWCARD_FIELD_NUMBER = 6;
    private coincheProto.DrawCard drawCard_;
    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    public boolean hasDrawCard() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    public coincheProto.DrawCard getDrawCard() {
      return drawCard_ == null ? coincheProto.DrawCard.getDefaultInstance() : drawCard_;
    }
    /**
     * <code>optional .DrawCard drawCard = 6;</code>
     */
    public coincheProto.DrawCardOrBuilder getDrawCardOrBuilder() {
      return drawCard_ == null ? coincheProto.DrawCard.getDefaultInstance() : drawCard_;
    }

    public static final int STACKWINNER_FIELD_NUMBER = 7;
    private coincheProto.StackWinner stackWinner_;
    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    public boolean hasStackWinner() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    public coincheProto.StackWinner getStackWinner() {
      return stackWinner_ == null ? coincheProto.StackWinner.getDefaultInstance() : stackWinner_;
    }
    /**
     * <code>optional .StackWinner stackWinner = 7;</code>
     */
    public coincheProto.StackWinnerOrBuilder getStackWinnerOrBuilder() {
      return stackWinner_ == null ? coincheProto.StackWinner.getDefaultInstance() : stackWinner_;
    }

    public static final int PLAYERSTATE_FIELD_NUMBER = 8;
    private coincheProto.PlayerState playerState_;
    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    public boolean hasPlayerState() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    public coincheProto.PlayerState getPlayerState() {
      return playerState_ == null ? coincheProto.PlayerState.getDefaultInstance() : playerState_;
    }
    /**
     * <code>optional .PlayerState playerState = 8;</code>
     */
    public coincheProto.PlayerStateOrBuilder getPlayerStateOrBuilder() {
      return playerState_ == null ? coincheProto.PlayerState.getDefaultInstance() : playerState_;
    }

    public static final int PLAYERDEALED_FIELD_NUMBER = 9;
    private coincheProto.PlayerDealed playerDealed_;
    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    public boolean hasPlayerDealed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    public coincheProto.PlayerDealed getPlayerDealed() {
      return playerDealed_ == null ? coincheProto.PlayerDealed.getDefaultInstance() : playerDealed_;
    }
    /**
     * <code>optional .PlayerDealed playerDealed = 9;</code>
     */
    public coincheProto.PlayerDealedOrBuilder getPlayerDealedOrBuilder() {
      return playerDealed_ == null ? coincheProto.PlayerDealed.getDefaultInstance() : playerDealed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTypeMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasDealWinner()) {
        if (!getDealWinner().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPlayedCard()) {
        if (!getPlayedCard().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasActionValidation()) {
        if (!getActionValidation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWinner()) {
        if (!getWinner().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDrawCard()) {
        if (!getDrawCard().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStackWinner()) {
        if (!getStackWinner().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPlayerState()) {
        if (!getPlayerState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPlayerDealed()) {
        if (!getPlayerDealed().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, typeMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getDealWinner());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getPlayedCard());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getActionValidation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getWinner());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getDrawCard());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getStackWinner());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getPlayerState());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, getPlayerDealed());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, typeMessage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDealWinner());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPlayedCard());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getActionValidation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getWinner());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDrawCard());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getStackWinner());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getPlayerState());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getPlayerDealed());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof coincheProto.ServerMsg)) {
        return super.equals(obj);
      }
      coincheProto.ServerMsg other = (coincheProto.ServerMsg) obj;

      boolean result = true;
      result = result && (hasTypeMessage() == other.hasTypeMessage());
      if (hasTypeMessage()) {
        result = result && typeMessage_ == other.typeMessage_;
      }
      result = result && (hasDealWinner() == other.hasDealWinner());
      if (hasDealWinner()) {
        result = result && getDealWinner()
            .equals(other.getDealWinner());
      }
      result = result && (hasPlayedCard() == other.hasPlayedCard());
      if (hasPlayedCard()) {
        result = result && getPlayedCard()
            .equals(other.getPlayedCard());
      }
      result = result && (hasActionValidation() == other.hasActionValidation());
      if (hasActionValidation()) {
        result = result && getActionValidation()
            .equals(other.getActionValidation());
      }
      result = result && (hasWinner() == other.hasWinner());
      if (hasWinner()) {
        result = result && getWinner()
            .equals(other.getWinner());
      }
      result = result && (hasDrawCard() == other.hasDrawCard());
      if (hasDrawCard()) {
        result = result && getDrawCard()
            .equals(other.getDrawCard());
      }
      result = result && (hasStackWinner() == other.hasStackWinner());
      if (hasStackWinner()) {
        result = result && getStackWinner()
            .equals(other.getStackWinner());
      }
      result = result && (hasPlayerState() == other.hasPlayerState());
      if (hasPlayerState()) {
        result = result && getPlayerState()
            .equals(other.getPlayerState());
      }
      result = result && (hasPlayerDealed() == other.hasPlayerDealed());
      if (hasPlayerDealed()) {
        result = result && getPlayerDealed()
            .equals(other.getPlayerDealed());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeMessage()) {
        hash = (37 * hash) + TYPEMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + typeMessage_;
      }
      if (hasDealWinner()) {
        hash = (37 * hash) + DEALWINNER_FIELD_NUMBER;
        hash = (53 * hash) + getDealWinner().hashCode();
      }
      if (hasPlayedCard()) {
        hash = (37 * hash) + PLAYEDCARD_FIELD_NUMBER;
        hash = (53 * hash) + getPlayedCard().hashCode();
      }
      if (hasActionValidation()) {
        hash = (37 * hash) + ACTIONVALIDATION_FIELD_NUMBER;
        hash = (53 * hash) + getActionValidation().hashCode();
      }
      if (hasWinner()) {
        hash = (37 * hash) + WINNER_FIELD_NUMBER;
        hash = (53 * hash) + getWinner().hashCode();
      }
      if (hasDrawCard()) {
        hash = (37 * hash) + DRAWCARD_FIELD_NUMBER;
        hash = (53 * hash) + getDrawCard().hashCode();
      }
      if (hasStackWinner()) {
        hash = (37 * hash) + STACKWINNER_FIELD_NUMBER;
        hash = (53 * hash) + getStackWinner().hashCode();
      }
      if (hasPlayerState()) {
        hash = (37 * hash) + PLAYERSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerState().hashCode();
      }
      if (hasPlayerDealed()) {
        hash = (37 * hash) + PLAYERDEALED_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerDealed().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static coincheProto.ServerMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ServerMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ServerMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ServerMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ServerMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static coincheProto.ServerMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static coincheProto.ServerMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.ServerMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.ServerMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static coincheProto.ServerMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static coincheProto.ServerMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static coincheProto.ServerMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(coincheProto.ServerMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Msg encapsulation
     * </pre>
     *
     * Protobuf type {@code ServerMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ServerMsg)
        coincheProto.ServerMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return coincheProto.internal_static_ServerMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return coincheProto.internal_static_ServerMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                coincheProto.ServerMsg.class, coincheProto.ServerMsg.Builder.class);
      }

      // Construct using coincheProto.ServerMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDealWinnerFieldBuilder();
          getPlayedCardFieldBuilder();
          getActionValidationFieldBuilder();
          getWinnerFieldBuilder();
          getDrawCardFieldBuilder();
          getStackWinnerFieldBuilder();
          getPlayerStateFieldBuilder();
          getPlayerDealedFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        typeMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dealWinnerBuilder_ == null) {
          dealWinner_ = null;
        } else {
          dealWinnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playedCardBuilder_ == null) {
          playedCard_ = null;
        } else {
          playedCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (actionValidationBuilder_ == null) {
          actionValidation_ = null;
        } else {
          actionValidationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (winnerBuilder_ == null) {
          winner_ = null;
        } else {
          winnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (drawCardBuilder_ == null) {
          drawCard_ = null;
        } else {
          drawCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (stackWinnerBuilder_ == null) {
          stackWinner_ = null;
        } else {
          stackWinnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (playerStateBuilder_ == null) {
          playerState_ = null;
        } else {
          playerStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playerDealedBuilder_ == null) {
          playerDealed_ = null;
        } else {
          playerDealedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return coincheProto.internal_static_ServerMsg_descriptor;
      }

      public coincheProto.ServerMsg getDefaultInstanceForType() {
        return coincheProto.ServerMsg.getDefaultInstance();
      }

      public coincheProto.ServerMsg build() {
        coincheProto.ServerMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public coincheProto.ServerMsg buildPartial() {
        coincheProto.ServerMsg result = new coincheProto.ServerMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeMessage_ = typeMessage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dealWinnerBuilder_ == null) {
          result.dealWinner_ = dealWinner_;
        } else {
          result.dealWinner_ = dealWinnerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (playedCardBuilder_ == null) {
          result.playedCard_ = playedCard_;
        } else {
          result.playedCard_ = playedCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (actionValidationBuilder_ == null) {
          result.actionValidation_ = actionValidation_;
        } else {
          result.actionValidation_ = actionValidationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (winnerBuilder_ == null) {
          result.winner_ = winner_;
        } else {
          result.winner_ = winnerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (drawCardBuilder_ == null) {
          result.drawCard_ = drawCard_;
        } else {
          result.drawCard_ = drawCardBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (stackWinnerBuilder_ == null) {
          result.stackWinner_ = stackWinner_;
        } else {
          result.stackWinner_ = stackWinnerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (playerStateBuilder_ == null) {
          result.playerState_ = playerState_;
        } else {
          result.playerState_ = playerStateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (playerDealedBuilder_ == null) {
          result.playerDealed_ = playerDealed_;
        } else {
          result.playerDealed_ = playerDealedBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof coincheProto.ServerMsg) {
          return mergeFrom((coincheProto.ServerMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(coincheProto.ServerMsg other) {
        if (other == coincheProto.ServerMsg.getDefaultInstance()) return this;
        if (other.hasTypeMessage()) {
          setTypeMessage(other.getTypeMessage());
        }
        if (other.hasDealWinner()) {
          mergeDealWinner(other.getDealWinner());
        }
        if (other.hasPlayedCard()) {
          mergePlayedCard(other.getPlayedCard());
        }
        if (other.hasActionValidation()) {
          mergeActionValidation(other.getActionValidation());
        }
        if (other.hasWinner()) {
          mergeWinner(other.getWinner());
        }
        if (other.hasDrawCard()) {
          mergeDrawCard(other.getDrawCard());
        }
        if (other.hasStackWinner()) {
          mergeStackWinner(other.getStackWinner());
        }
        if (other.hasPlayerState()) {
          mergePlayerState(other.getPlayerState());
        }
        if (other.hasPlayerDealed()) {
          mergePlayerDealed(other.getPlayerDealed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTypeMessage()) {
          return false;
        }
        if (hasDealWinner()) {
          if (!getDealWinner().isInitialized()) {
            return false;
          }
        }
        if (hasPlayedCard()) {
          if (!getPlayedCard().isInitialized()) {
            return false;
          }
        }
        if (hasActionValidation()) {
          if (!getActionValidation().isInitialized()) {
            return false;
          }
        }
        if (hasWinner()) {
          if (!getWinner().isInitialized()) {
            return false;
          }
        }
        if (hasDrawCard()) {
          if (!getDrawCard().isInitialized()) {
            return false;
          }
        }
        if (hasStackWinner()) {
          if (!getStackWinner().isInitialized()) {
            return false;
          }
        }
        if (hasPlayerState()) {
          if (!getPlayerState().isInitialized()) {
            return false;
          }
        }
        if (hasPlayerDealed()) {
          if (!getPlayerDealed().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        coincheProto.ServerMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (coincheProto.ServerMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int typeMessage_ = 0;
      /**
       * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
       */
      public boolean hasTypeMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
       */
      public coincheProto.ServerMsg.TypeMessage getTypeMessage() {
        coincheProto.ServerMsg.TypeMessage result = coincheProto.ServerMsg.TypeMessage.valueOf(typeMessage_);
        return result == null ? coincheProto.ServerMsg.TypeMessage.DEALWINNER : result;
      }
      /**
       * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
       */
      public Builder setTypeMessage(coincheProto.ServerMsg.TypeMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        typeMessage_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .ServerMsg.TypeMessage typeMessage = 1;</code>
       */
      public Builder clearTypeMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeMessage_ = 0;
        onChanged();
        return this;
      }

      private coincheProto.DealWinner dealWinner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.DealWinner, coincheProto.DealWinner.Builder, coincheProto.DealWinnerOrBuilder> dealWinnerBuilder_;
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public boolean hasDealWinner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public coincheProto.DealWinner getDealWinner() {
        if (dealWinnerBuilder_ == null) {
          return dealWinner_ == null ? coincheProto.DealWinner.getDefaultInstance() : dealWinner_;
        } else {
          return dealWinnerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public Builder setDealWinner(coincheProto.DealWinner value) {
        if (dealWinnerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dealWinner_ = value;
          onChanged();
        } else {
          dealWinnerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public Builder setDealWinner(
          coincheProto.DealWinner.Builder builderForValue) {
        if (dealWinnerBuilder_ == null) {
          dealWinner_ = builderForValue.build();
          onChanged();
        } else {
          dealWinnerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public Builder mergeDealWinner(coincheProto.DealWinner value) {
        if (dealWinnerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dealWinner_ != null &&
              dealWinner_ != coincheProto.DealWinner.getDefaultInstance()) {
            dealWinner_ =
              coincheProto.DealWinner.newBuilder(dealWinner_).mergeFrom(value).buildPartial();
          } else {
            dealWinner_ = value;
          }
          onChanged();
        } else {
          dealWinnerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public Builder clearDealWinner() {
        if (dealWinnerBuilder_ == null) {
          dealWinner_ = null;
          onChanged();
        } else {
          dealWinnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public coincheProto.DealWinner.Builder getDealWinnerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDealWinnerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      public coincheProto.DealWinnerOrBuilder getDealWinnerOrBuilder() {
        if (dealWinnerBuilder_ != null) {
          return dealWinnerBuilder_.getMessageOrBuilder();
        } else {
          return dealWinner_ == null ?
              coincheProto.DealWinner.getDefaultInstance() : dealWinner_;
        }
      }
      /**
       * <code>optional .DealWinner dealWinner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.DealWinner, coincheProto.DealWinner.Builder, coincheProto.DealWinnerOrBuilder> 
          getDealWinnerFieldBuilder() {
        if (dealWinnerBuilder_ == null) {
          dealWinnerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.DealWinner, coincheProto.DealWinner.Builder, coincheProto.DealWinnerOrBuilder>(
                  getDealWinner(),
                  getParentForChildren(),
                  isClean());
          dealWinner_ = null;
        }
        return dealWinnerBuilder_;
      }

      private coincheProto.PlayedCard playedCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayedCard, coincheProto.PlayedCard.Builder, coincheProto.PlayedCardOrBuilder> playedCardBuilder_;
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public boolean hasPlayedCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public coincheProto.PlayedCard getPlayedCard() {
        if (playedCardBuilder_ == null) {
          return playedCard_ == null ? coincheProto.PlayedCard.getDefaultInstance() : playedCard_;
        } else {
          return playedCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public Builder setPlayedCard(coincheProto.PlayedCard value) {
        if (playedCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playedCard_ = value;
          onChanged();
        } else {
          playedCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public Builder setPlayedCard(
          coincheProto.PlayedCard.Builder builderForValue) {
        if (playedCardBuilder_ == null) {
          playedCard_ = builderForValue.build();
          onChanged();
        } else {
          playedCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public Builder mergePlayedCard(coincheProto.PlayedCard value) {
        if (playedCardBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              playedCard_ != null &&
              playedCard_ != coincheProto.PlayedCard.getDefaultInstance()) {
            playedCard_ =
              coincheProto.PlayedCard.newBuilder(playedCard_).mergeFrom(value).buildPartial();
          } else {
            playedCard_ = value;
          }
          onChanged();
        } else {
          playedCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public Builder clearPlayedCard() {
        if (playedCardBuilder_ == null) {
          playedCard_ = null;
          onChanged();
        } else {
          playedCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public coincheProto.PlayedCard.Builder getPlayedCardBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPlayedCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      public coincheProto.PlayedCardOrBuilder getPlayedCardOrBuilder() {
        if (playedCardBuilder_ != null) {
          return playedCardBuilder_.getMessageOrBuilder();
        } else {
          return playedCard_ == null ?
              coincheProto.PlayedCard.getDefaultInstance() : playedCard_;
        }
      }
      /**
       * <code>optional .PlayedCard playedCard = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayedCard, coincheProto.PlayedCard.Builder, coincheProto.PlayedCardOrBuilder> 
          getPlayedCardFieldBuilder() {
        if (playedCardBuilder_ == null) {
          playedCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.PlayedCard, coincheProto.PlayedCard.Builder, coincheProto.PlayedCardOrBuilder>(
                  getPlayedCard(),
                  getParentForChildren(),
                  isClean());
          playedCard_ = null;
        }
        return playedCardBuilder_;
      }

      private coincheProto.ActionValidation actionValidation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.ActionValidation, coincheProto.ActionValidation.Builder, coincheProto.ActionValidationOrBuilder> actionValidationBuilder_;
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public boolean hasActionValidation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public coincheProto.ActionValidation getActionValidation() {
        if (actionValidationBuilder_ == null) {
          return actionValidation_ == null ? coincheProto.ActionValidation.getDefaultInstance() : actionValidation_;
        } else {
          return actionValidationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public Builder setActionValidation(coincheProto.ActionValidation value) {
        if (actionValidationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actionValidation_ = value;
          onChanged();
        } else {
          actionValidationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public Builder setActionValidation(
          coincheProto.ActionValidation.Builder builderForValue) {
        if (actionValidationBuilder_ == null) {
          actionValidation_ = builderForValue.build();
          onChanged();
        } else {
          actionValidationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public Builder mergeActionValidation(coincheProto.ActionValidation value) {
        if (actionValidationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              actionValidation_ != null &&
              actionValidation_ != coincheProto.ActionValidation.getDefaultInstance()) {
            actionValidation_ =
              coincheProto.ActionValidation.newBuilder(actionValidation_).mergeFrom(value).buildPartial();
          } else {
            actionValidation_ = value;
          }
          onChanged();
        } else {
          actionValidationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public Builder clearActionValidation() {
        if (actionValidationBuilder_ == null) {
          actionValidation_ = null;
          onChanged();
        } else {
          actionValidationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public coincheProto.ActionValidation.Builder getActionValidationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getActionValidationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      public coincheProto.ActionValidationOrBuilder getActionValidationOrBuilder() {
        if (actionValidationBuilder_ != null) {
          return actionValidationBuilder_.getMessageOrBuilder();
        } else {
          return actionValidation_ == null ?
              coincheProto.ActionValidation.getDefaultInstance() : actionValidation_;
        }
      }
      /**
       * <code>optional .ActionValidation actionValidation = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.ActionValidation, coincheProto.ActionValidation.Builder, coincheProto.ActionValidationOrBuilder> 
          getActionValidationFieldBuilder() {
        if (actionValidationBuilder_ == null) {
          actionValidationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.ActionValidation, coincheProto.ActionValidation.Builder, coincheProto.ActionValidationOrBuilder>(
                  getActionValidation(),
                  getParentForChildren(),
                  isClean());
          actionValidation_ = null;
        }
        return actionValidationBuilder_;
      }

      private coincheProto.GameWinner winner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.GameWinner, coincheProto.GameWinner.Builder, coincheProto.GameWinnerOrBuilder> winnerBuilder_;
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public boolean hasWinner() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public coincheProto.GameWinner getWinner() {
        if (winnerBuilder_ == null) {
          return winner_ == null ? coincheProto.GameWinner.getDefaultInstance() : winner_;
        } else {
          return winnerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public Builder setWinner(coincheProto.GameWinner value) {
        if (winnerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          winner_ = value;
          onChanged();
        } else {
          winnerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public Builder setWinner(
          coincheProto.GameWinner.Builder builderForValue) {
        if (winnerBuilder_ == null) {
          winner_ = builderForValue.build();
          onChanged();
        } else {
          winnerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public Builder mergeWinner(coincheProto.GameWinner value) {
        if (winnerBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              winner_ != null &&
              winner_ != coincheProto.GameWinner.getDefaultInstance()) {
            winner_ =
              coincheProto.GameWinner.newBuilder(winner_).mergeFrom(value).buildPartial();
          } else {
            winner_ = value;
          }
          onChanged();
        } else {
          winnerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public Builder clearWinner() {
        if (winnerBuilder_ == null) {
          winner_ = null;
          onChanged();
        } else {
          winnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public coincheProto.GameWinner.Builder getWinnerBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getWinnerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      public coincheProto.GameWinnerOrBuilder getWinnerOrBuilder() {
        if (winnerBuilder_ != null) {
          return winnerBuilder_.getMessageOrBuilder();
        } else {
          return winner_ == null ?
              coincheProto.GameWinner.getDefaultInstance() : winner_;
        }
      }
      /**
       * <code>optional .GameWinner winner = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.GameWinner, coincheProto.GameWinner.Builder, coincheProto.GameWinnerOrBuilder> 
          getWinnerFieldBuilder() {
        if (winnerBuilder_ == null) {
          winnerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.GameWinner, coincheProto.GameWinner.Builder, coincheProto.GameWinnerOrBuilder>(
                  getWinner(),
                  getParentForChildren(),
                  isClean());
          winner_ = null;
        }
        return winnerBuilder_;
      }

      private coincheProto.DrawCard drawCard_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.DrawCard, coincheProto.DrawCard.Builder, coincheProto.DrawCardOrBuilder> drawCardBuilder_;
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public boolean hasDrawCard() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public coincheProto.DrawCard getDrawCard() {
        if (drawCardBuilder_ == null) {
          return drawCard_ == null ? coincheProto.DrawCard.getDefaultInstance() : drawCard_;
        } else {
          return drawCardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public Builder setDrawCard(coincheProto.DrawCard value) {
        if (drawCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          drawCard_ = value;
          onChanged();
        } else {
          drawCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public Builder setDrawCard(
          coincheProto.DrawCard.Builder builderForValue) {
        if (drawCardBuilder_ == null) {
          drawCard_ = builderForValue.build();
          onChanged();
        } else {
          drawCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public Builder mergeDrawCard(coincheProto.DrawCard value) {
        if (drawCardBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              drawCard_ != null &&
              drawCard_ != coincheProto.DrawCard.getDefaultInstance()) {
            drawCard_ =
              coincheProto.DrawCard.newBuilder(drawCard_).mergeFrom(value).buildPartial();
          } else {
            drawCard_ = value;
          }
          onChanged();
        } else {
          drawCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public Builder clearDrawCard() {
        if (drawCardBuilder_ == null) {
          drawCard_ = null;
          onChanged();
        } else {
          drawCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public coincheProto.DrawCard.Builder getDrawCardBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDrawCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      public coincheProto.DrawCardOrBuilder getDrawCardOrBuilder() {
        if (drawCardBuilder_ != null) {
          return drawCardBuilder_.getMessageOrBuilder();
        } else {
          return drawCard_ == null ?
              coincheProto.DrawCard.getDefaultInstance() : drawCard_;
        }
      }
      /**
       * <code>optional .DrawCard drawCard = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.DrawCard, coincheProto.DrawCard.Builder, coincheProto.DrawCardOrBuilder> 
          getDrawCardFieldBuilder() {
        if (drawCardBuilder_ == null) {
          drawCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.DrawCard, coincheProto.DrawCard.Builder, coincheProto.DrawCardOrBuilder>(
                  getDrawCard(),
                  getParentForChildren(),
                  isClean());
          drawCard_ = null;
        }
        return drawCardBuilder_;
      }

      private coincheProto.StackWinner stackWinner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.StackWinner, coincheProto.StackWinner.Builder, coincheProto.StackWinnerOrBuilder> stackWinnerBuilder_;
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public boolean hasStackWinner() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public coincheProto.StackWinner getStackWinner() {
        if (stackWinnerBuilder_ == null) {
          return stackWinner_ == null ? coincheProto.StackWinner.getDefaultInstance() : stackWinner_;
        } else {
          return stackWinnerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public Builder setStackWinner(coincheProto.StackWinner value) {
        if (stackWinnerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stackWinner_ = value;
          onChanged();
        } else {
          stackWinnerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public Builder setStackWinner(
          coincheProto.StackWinner.Builder builderForValue) {
        if (stackWinnerBuilder_ == null) {
          stackWinner_ = builderForValue.build();
          onChanged();
        } else {
          stackWinnerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public Builder mergeStackWinner(coincheProto.StackWinner value) {
        if (stackWinnerBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              stackWinner_ != null &&
              stackWinner_ != coincheProto.StackWinner.getDefaultInstance()) {
            stackWinner_ =
              coincheProto.StackWinner.newBuilder(stackWinner_).mergeFrom(value).buildPartial();
          } else {
            stackWinner_ = value;
          }
          onChanged();
        } else {
          stackWinnerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public Builder clearStackWinner() {
        if (stackWinnerBuilder_ == null) {
          stackWinner_ = null;
          onChanged();
        } else {
          stackWinnerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public coincheProto.StackWinner.Builder getStackWinnerBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getStackWinnerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      public coincheProto.StackWinnerOrBuilder getStackWinnerOrBuilder() {
        if (stackWinnerBuilder_ != null) {
          return stackWinnerBuilder_.getMessageOrBuilder();
        } else {
          return stackWinner_ == null ?
              coincheProto.StackWinner.getDefaultInstance() : stackWinner_;
        }
      }
      /**
       * <code>optional .StackWinner stackWinner = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.StackWinner, coincheProto.StackWinner.Builder, coincheProto.StackWinnerOrBuilder> 
          getStackWinnerFieldBuilder() {
        if (stackWinnerBuilder_ == null) {
          stackWinnerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.StackWinner, coincheProto.StackWinner.Builder, coincheProto.StackWinnerOrBuilder>(
                  getStackWinner(),
                  getParentForChildren(),
                  isClean());
          stackWinner_ = null;
        }
        return stackWinnerBuilder_;
      }

      private coincheProto.PlayerState playerState_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayerState, coincheProto.PlayerState.Builder, coincheProto.PlayerStateOrBuilder> playerStateBuilder_;
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public boolean hasPlayerState() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public coincheProto.PlayerState getPlayerState() {
        if (playerStateBuilder_ == null) {
          return playerState_ == null ? coincheProto.PlayerState.getDefaultInstance() : playerState_;
        } else {
          return playerStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public Builder setPlayerState(coincheProto.PlayerState value) {
        if (playerStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerState_ = value;
          onChanged();
        } else {
          playerStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public Builder setPlayerState(
          coincheProto.PlayerState.Builder builderForValue) {
        if (playerStateBuilder_ == null) {
          playerState_ = builderForValue.build();
          onChanged();
        } else {
          playerStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public Builder mergePlayerState(coincheProto.PlayerState value) {
        if (playerStateBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              playerState_ != null &&
              playerState_ != coincheProto.PlayerState.getDefaultInstance()) {
            playerState_ =
              coincheProto.PlayerState.newBuilder(playerState_).mergeFrom(value).buildPartial();
          } else {
            playerState_ = value;
          }
          onChanged();
        } else {
          playerStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public Builder clearPlayerState() {
        if (playerStateBuilder_ == null) {
          playerState_ = null;
          onChanged();
        } else {
          playerStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public coincheProto.PlayerState.Builder getPlayerStateBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getPlayerStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      public coincheProto.PlayerStateOrBuilder getPlayerStateOrBuilder() {
        if (playerStateBuilder_ != null) {
          return playerStateBuilder_.getMessageOrBuilder();
        } else {
          return playerState_ == null ?
              coincheProto.PlayerState.getDefaultInstance() : playerState_;
        }
      }
      /**
       * <code>optional .PlayerState playerState = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayerState, coincheProto.PlayerState.Builder, coincheProto.PlayerStateOrBuilder> 
          getPlayerStateFieldBuilder() {
        if (playerStateBuilder_ == null) {
          playerStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.PlayerState, coincheProto.PlayerState.Builder, coincheProto.PlayerStateOrBuilder>(
                  getPlayerState(),
                  getParentForChildren(),
                  isClean());
          playerState_ = null;
        }
        return playerStateBuilder_;
      }

      private coincheProto.PlayerDealed playerDealed_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayerDealed, coincheProto.PlayerDealed.Builder, coincheProto.PlayerDealedOrBuilder> playerDealedBuilder_;
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public boolean hasPlayerDealed() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public coincheProto.PlayerDealed getPlayerDealed() {
        if (playerDealedBuilder_ == null) {
          return playerDealed_ == null ? coincheProto.PlayerDealed.getDefaultInstance() : playerDealed_;
        } else {
          return playerDealedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public Builder setPlayerDealed(coincheProto.PlayerDealed value) {
        if (playerDealedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerDealed_ = value;
          onChanged();
        } else {
          playerDealedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public Builder setPlayerDealed(
          coincheProto.PlayerDealed.Builder builderForValue) {
        if (playerDealedBuilder_ == null) {
          playerDealed_ = builderForValue.build();
          onChanged();
        } else {
          playerDealedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public Builder mergePlayerDealed(coincheProto.PlayerDealed value) {
        if (playerDealedBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              playerDealed_ != null &&
              playerDealed_ != coincheProto.PlayerDealed.getDefaultInstance()) {
            playerDealed_ =
              coincheProto.PlayerDealed.newBuilder(playerDealed_).mergeFrom(value).buildPartial();
          } else {
            playerDealed_ = value;
          }
          onChanged();
        } else {
          playerDealedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public Builder clearPlayerDealed() {
        if (playerDealedBuilder_ == null) {
          playerDealed_ = null;
          onChanged();
        } else {
          playerDealedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public coincheProto.PlayerDealed.Builder getPlayerDealedBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPlayerDealedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      public coincheProto.PlayerDealedOrBuilder getPlayerDealedOrBuilder() {
        if (playerDealedBuilder_ != null) {
          return playerDealedBuilder_.getMessageOrBuilder();
        } else {
          return playerDealed_ == null ?
              coincheProto.PlayerDealed.getDefaultInstance() : playerDealed_;
        }
      }
      /**
       * <code>optional .PlayerDealed playerDealed = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          coincheProto.PlayerDealed, coincheProto.PlayerDealed.Builder, coincheProto.PlayerDealedOrBuilder> 
          getPlayerDealedFieldBuilder() {
        if (playerDealedBuilder_ == null) {
          playerDealedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              coincheProto.PlayerDealed, coincheProto.PlayerDealed.Builder, coincheProto.PlayerDealedOrBuilder>(
                  getPlayerDealed(),
                  getParentForChildren(),
                  isClean());
          playerDealed_ = null;
        }
        return playerDealedBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ServerMsg)
    }

    // @@protoc_insertion_point(class_scope:ServerMsg)
    private static final coincheProto.ServerMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new coincheProto.ServerMsg();
    }

    public static coincheProto.ServerMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ServerMsg>
        PARSER = new com.google.protobuf.AbstractParser<ServerMsg>() {
      public ServerMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerMsg> getParserForType() {
      return PARSER;
    }

    public coincheProto.ServerMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlayCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Deal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Deal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlayerMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DealWinner_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DealWinner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayedCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlayedCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ActionValidation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ActionValidation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GameWinner_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GameWinner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DrawCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DrawCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StackWinner_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_StackWinner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerDealed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlayerDealed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlayerState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ServerMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ServerMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024CoincheGameCmd.proto\"@\n\010PlayCard\022\030\n\004na" +
      "me\030\001 \002(\0162\n.CARD_NAME\022\032\n\005color\030\002 \002(\0162\013.CA" +
      "RD_COLOR\"+\n\004Deal\022\014\n\004deal\030\001 \002(\005\022\025\n\005trump\030" +
      "\002 \002(\0162\006.TRUMP\"\221\001\n\tPlayerMsg\022+\n\013typeMessa" +
      "ge\030\001 \002(\0162\026.PlayerMsg.TypeMessage\022\033\n\010play" +
      "Card\030\002 \001(\0132\t.PlayCard\022\023\n\004deal\030\003 \001(\0132\005.De" +
      "al\"%\n\013TypeMessage\022\014\n\010PLAYCARD\020\000\022\010\n\004DEAL\020" +
      "\001\"O\n\nDealWinner\022\016\n\006player\030\001 \002(\005\022\014\n\004team\030" +
      "\002 \002(\005\022\025\n\005trump\030\003 \002(\0162\006.TRUMP\022\014\n\004deal\030\004 \002" +
      "(\005\"`\n\nPlayedCard\022\030\n\004name\030\001 \002(\0162\n.CARD_NA",
      "ME\022\032\n\005color\030\002 \002(\0162\013.CARD_COLOR\022\016\n\006player" +
      "\030\003 \002(\005\022\014\n\004team\030\004 \002(\005\"$\n\020ActionValidation" +
      "\022\020\n\010accepted\030\001 \002(\010\"Y\n\nGameWinner\022\022\n\nteam" +
      "1Score\030\001 \002(\005\022\022\n\nteam2Score\030\002 \002(\005\022\022\n\ndeal" +
      "erTeam\030\003 \002(\005\022\017\n\007winDeal\030\004 \002(\010\"@\n\010DrawCar" +
      "d\022\030\n\004name\030\001 \002(\0162\n.CARD_NAME\022\032\n\005color\030\002 \002" +
      "(\0162\013.CARD_COLOR\":\n\013StackWinner\022\014\n\004team\030\001" +
      " \002(\005\022\016\n\006player\030\002 \002(\005\022\r\n\005score\030\003 \002(\005\"Q\n\014P" +
      "layerDealed\022\016\n\006player\030\001 \002(\005\022\014\n\004team\030\002 \002(" +
      "\005\022\014\n\004deal\030\003 \002(\005\022\025\n\005trump\030\004 \002(\0162\006.TRUMP\"\230",
      "\001\n\013PlayerState\022!\n\005state\030\001 \002(\0162\022.PlayerSt" +
      "ate.State\022\014\n\004team\030\002 \002(\005\022\016\n\006Player\030\003 \002(\005\"" +
      "H\n\005State\022\017\n\013WAITINGGAME\020\000\022\013\n\007PLAYING\020\001\022\014" +
      "\n\010YOURTURN\020\002\022\t\n\005LEAVE\020\003\022\010\n\004DEAL\020\004\"\340\003\n\tSe" +
      "rverMsg\022+\n\013typeMessage\030\001 \002(\0162\026.ServerMsg" +
      ".TypeMessage\022\037\n\ndealWinner\030\002 \001(\0132\013.DealW" +
      "inner\022\037\n\nplayedCard\030\003 \001(\0132\013.PlayedCard\022+" +
      "\n\020actionValidation\030\004 \001(\0132\021.ActionValidat" +
      "ion\022\033\n\006winner\030\005 \001(\0132\013.GameWinner\022\033\n\010draw" +
      "Card\030\006 \001(\0132\t.DrawCard\022!\n\013stackWinner\030\007 \001",
      "(\0132\014.StackWinner\022!\n\013playerState\030\010 \001(\0132\014." +
      "PlayerState\022#\n\014playerDealed\030\t \001(\0132\r.Play" +
      "erDealed\"\221\001\n\013TypeMessage\022\016\n\nDEALWINNER\020\000" +
      "\022\016\n\nPLAYEDCARD\020\001\022\024\n\020ACTIONVALIDATION\020\002\022\n" +
      "\n\006WINNER\020\003\022\014\n\010DRAWCARD\020\004\022\017\n\013STACKWINNER\020" +
      "\005\022\017\n\013PLAYERSTATE\020\006\022\020\n\014PLAYERDEALED\020\007*N\n\005" +
      "TRUMP\022\t\n\005TNONE\020\000\022\n\n\006TSPADE\020\001\022\013\n\007THEARTH\020" +
      "\002\022\014\n\010TDIAMOND\020\003\022\t\n\005TCLUB\020\004\022\010\n\004TALL\020\005*:\n\n" +
      "CARD_COLOR\022\t\n\005SPADE\020\000\022\n\n\006HEARTH\020\001\022\013\n\007DIA" +
      "MOND\020\002\022\010\n\004CLUB\020\003*]\n\tCARD_NAME\022\007\n\003ACE\020\000\022\t",
      "\n\005SEVEN\020\001\022\n\n\006HEIGHT\020\002\022\010\n\004NINE\020\003\022\007\n\003TEN\020\004" +
      "\022\010\n\004JACK\020\005\022\t\n\005QUEEN\020\006\022\010\n\004KING\020\007B\020\n\000B\014coi" +
      "ncheProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_PlayCard_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PlayCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlayCard_descriptor,
        new java.lang.String[] { "Name", "Color", });
    internal_static_Deal_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Deal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Deal_descriptor,
        new java.lang.String[] { "Deal", "Trump", });
    internal_static_PlayerMsg_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_PlayerMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlayerMsg_descriptor,
        new java.lang.String[] { "TypeMessage", "PlayCard", "Deal", });
    internal_static_DealWinner_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_DealWinner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DealWinner_descriptor,
        new java.lang.String[] { "Player", "Team", "Trump", "Deal", });
    internal_static_PlayedCard_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_PlayedCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlayedCard_descriptor,
        new java.lang.String[] { "Name", "Color", "Player", "Team", });
    internal_static_ActionValidation_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ActionValidation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ActionValidation_descriptor,
        new java.lang.String[] { "Accepted", });
    internal_static_GameWinner_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_GameWinner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GameWinner_descriptor,
        new java.lang.String[] { "Team1Score", "Team2Score", "DealerTeam", "WinDeal", });
    internal_static_DrawCard_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_DrawCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DrawCard_descriptor,
        new java.lang.String[] { "Name", "Color", });
    internal_static_StackWinner_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_StackWinner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_StackWinner_descriptor,
        new java.lang.String[] { "Team", "Player", "Score", });
    internal_static_PlayerDealed_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_PlayerDealed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlayerDealed_descriptor,
        new java.lang.String[] { "Player", "Team", "Deal", "Trump", });
    internal_static_PlayerState_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_PlayerState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlayerState_descriptor,
        new java.lang.String[] { "State", "Team", "Player", });
    internal_static_ServerMsg_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ServerMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ServerMsg_descriptor,
        new java.lang.String[] { "TypeMessage", "DealWinner", "PlayedCard", "ActionValidation", "Winner", "DrawCard", "StackWinner", "PlayerState", "PlayerDealed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
